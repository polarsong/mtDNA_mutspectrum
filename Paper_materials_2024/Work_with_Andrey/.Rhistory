df_midori1 = reshape(data = df_midori, idvar = 'gene_and_species',
timevar = 'Mut',
direction = 'wide')
library(stringr)
df_midori1[,c('gene', 'species_name')] = str_split_fixed(df_midori1$gene_and_species, "_", 2)
df_midori1 = df_midori1[,c(2:15)]
names(df_midori1) = c('Mutation_TC_midori', 'Mutation_GA_midori', 'Mutation_CT_midori', 'Mutation_AG_midori',
'Mutation_AT_midori', 'Mutation_GT_midori', 'Mutation_TA_midori', 'Mutation_CG_midori',
'Mutation_TG_midori', 'Mutation_CA_midori', 'Mutation_GC_midori', 'Mutation_AC_midori',
'gene', 'species_name')
df_midori1$species_name = gsub('_', ' ', df_midori1$species_name)
df_fly = read.csv('../../Paper_materials_2024/flying_birds.csv')
df_fly = df_fly[,c(2,3,4)]
names(df_fly) = c('species_name', 'ability_to_fly', 'ability_to_dive')
avo_data = read.csv('../../Body/1Raw/Avonet_data.csv')
df_ex = df_mtdna[,c(2,17:95,97:102,105:107)]
df_ex1 = aggregate(. ~ species_name, FUN = mean, data = df_ex)
df_ex2 = unique(df_mtdna[,c(2,4)])
df_ex1 = merge(df_ex1, df_ex2)
df_short = df_ex1
colnames(df_short) <- paste(colnames(df_short),"refseq",sep="_")
names(df_short)[names(df_short) == 'species_name_refseq'] <- 'species_name'
names(avo_data)[names(avo_data) == 'Species3'] <- 'species_name'
names(avo_data)[names(avo_data) == 'Family3'] <- 'family'
names(avo_data)[names(avo_data) == 'Order3'] <- 'order'
df_fly = na.omit(df_fly)
df_midori_birds = merge(df_midori1, avo_data)
names_v1 = unique(df_midori_birds$species_name)
df_short1 = data.frame()
for (i in names_v1)
{
df1 = df_midori_birds[df_midori_birds$species_name == i,]
a = (sum(df1$Mutation_AG_midori))/(nrow(df1))
b = (sum(df1$Mutation_CT_midori))/(nrow(df1))
ab = c(i, a, b)
df_short1 = rbind(df_short1, ab)
}
names(df_short1) = c('species_name', 'Mutation_AG_midori', 'Mutation_CT_midori')
#write.csv(df_short1, file = 'New_midori_mutations_birds_only.csv')
df_cytb = read.csv('Midori2_birds_cytb_ghahskew_better.csv')
df_syst = read.csv('TaxonomyIOC14_1.csv', sep = ';')
df_midori_eco = read.csv('Midori_birds_eco.csv')
df_midori_eco = df_midori_eco[,c(2,3,4)]
df_midori_eco$species_name = gsub('_',' ', df_midori_eco$species_name)
names(df_midori_eco) = c('species_name', 'ability_to_fly_midori', 'ability_to_dive_midori')
names(df_syst)[names(df_syst) == 'species_name'] <- 'species_name_IOC'
names(df_syst) = c('order', 'family', 'genus', 'species_name_IOC')
df_syst = df_syst[,c(1,4)]
library(dplyr)
df_cytb = df_cytb[,c(2,3,4)]
names(df_cytb) = c('species_name', 'GhAhSkew_seq_beg', 'GhAhSkew_start_codon')
df_long = read.csv('AVES_longevity.csv')
firstup <- function(x) {
substr(x, 1, 1) <- toupper(substr(x, 1, 1))
x
}
df_long$scinam = firstup(df_long$scinam)
df_long = df_long[,c(1,2)]
names(df_long) = c('species_name', 'longevity')
df_lf = read.csv ('Species_life-histories.csv')
df_lf = df_lf[,c(1,5:16)]
names(df_lf)  = c('species_name',"oscine", 'migration_andrey', 'habitat_andrey', 'foraging_environment_andrey',
'daily_activity_andrey', 'diet_andrey', 'clutch_abdrey', 'clutch_min_andrey', 'clutch_max_andrey',
'nesting_period_andrey', 'after_fledging_period_andrey', 'lifespan_andrey')
df_bmr = read.csv('GlobalBMRbase.csv', sep = ';')
df_bmr = df_bmr[,c(1,7,8)]
names(df_bmr) = c('species_name', 'trait', 'trait_value')
df_bmr$trait_value =gsub(',','.', df_bmr$trait_value)
df_bmr$trait_value = as.numeric(df_bmr$trait_value)
df_bmr1 = df_bmr[df_bmr$trait == 'BMR',]
names_v1 = unique(df_bmr1$species_name)
df_bmr11 = data.frame()
for (i in names_v1)
{
df_1 = df_bmr1[df_bmr1$species_name == i,]
a = (sum(df_1$trait_value))/(nrow(df1))
b = unique(df_1$trait)
ab = c(i, b, a)
df_bmr11 = rbind(df_bmr11, ab)
}
names(df_bmr11) = c('species_name', 'trait_bmr', 'trait_value_bmr')
df_bmr2 = df_bmr[df_bmr$trait == 'SMR',]
names_v1 = unique(df_bmr2$species_name)
df_bmr21 = data.frame()
for (i in names_v1)
{
df_1 = df_bmr2[df_bmr2$species_name == i,]
a = (sum(df_1$trait_value))/(nrow(df1))
b = unique(df_1$trait)
ab = c(i, b, a)
df_bmr21 = rbind(df_bmr21, ab)
}
names(df_bmr21) = c('species_name', 'trait_smr', 'trait_value_smr')
df_bmr3 = df_bmr[df_bmr$trait == 'RMR',]
names_v1 = unique(df_bmr3$species_name)
df_bmr31 = data.frame()
for (i in names_v1)
{
df_1 = df_bmr3[df_bmr3$species_name == i,]
a = (sum(df_1$trait_value))/(nrow(df1))
b = unique(df_1$trait)
ab = c(i, b, a)
df_bmr31 = rbind(df_bmr31, ab)
}
names(df_bmr31) = c('species_name', 'trait_rmr', 'trait_value_rmr')
df_temp = read.csv('temp_new_data.csv')
df_temp = df_temp[,c(11, 4:8)]
names(df_temp) = c('species_name', 'LTNZ', 'UTNZ', 'TNZ', 'latitude', 'longitude')
df_extra = read.csv('mcnab_2009_data.csv')
df_extra = df_extra[,c(2, 6, 11, 14)]
names(df_extra) = c('species_name', 'bmr_kj_h', 'torpor', 'mountains')
df_vhi = read.table('Valya_high_alt.txt', header = TRUE, sep = ',')
names(df_vhi) = c('species_name', 'high_alt_value')
df_vhi$species_name = gsub('_',' ',df_vhi$species_name)
View(df_midori_eco)
View(df_short1)
df_short1$AGdivCT = df_short1$Mutation_AG_midori/df_short1$Mutation_CT_midori
df_short1$Mutation_CT_midori = as.numeric(as.character(df_short1$Mutation_CT_midori))
df_short1$AGdivCT = df_short1$Mutation_AG_midori/df_short1$Mutation_CT_midori
df_short1$Mutation_AG_midori = as.numeric(as.character(df_short1$Mutation_AG_midori))
df_short1$Mutation_CT_midori = as.numeric(as.character(df_short1$Mutation_CT_midori))
df_short1$AGdivCT = df_short1$Mutation_AG_midori/df_short1$Mutation_CT_midori
#df_midori_birds = merge(df_midori1, avo_data, by = 'Species3')
df_big = full_join(df_short, df_fly)
df_big1 = full_join(df_big, df_short1)
df_big11 = full_join(df_big1, df_cytb)
df_big2 = full_join(df_big11, avo_data)
df_big3 = full_join(df_big2, df_midori_eco)
df_big4 = full_join(df_big3, df_long)
df_big5 = full_join(df_big4, df_lf)
df_big6 = full_join(df_big5, df_bmr11)
df_big7 = full_join(df_big6, df_bmr21)
df_big8 = full_join(df_big7, df_bmr31)
df_big9 = full_join(df_big8, df_temp)
df_big10 = full_join(df_big9, df_extra)
df_big12 = full_join(df_big10, df_vhi)
write.csv(df_big12, file = 'big_birds_new_data.csv')
rm(list = ls(all=TRUE))
df_mtdna = read.csv('../../Paper_materials_2024/Birds_dataset_paper.csv')
View(df_mtdna)
names(df_mtdna)
df_codons = df_mtdna[,c(1,32:95)]
View(df_codons)
df_codons = df_mtdna[,c(2,32:95)]
df_codons1 = aggregate(. ~ species_name, FUN = mean, data = df_codons)
View(df_codons1)
lose_pro = sum(df_codons1$CCT + df_codons1$CCA + df_codons1$CCG + df_codons1$CCC)
gain_ser = sum(df_codons1$TCT + df_codons1$TCA + df_codons1$TCG + df_codons1$TCC)
gain_leu = sum(sum(df_codons1$CTT + df_codons1$CTA + df_codons1$CTG + df_codons1$CTC))
gain_leu = sum(df_codons1$CTT + df_codons1$CTA + df_codons1$CTG + df_codons1$CTC)
rm(list = ls(all=TRUE))
df_mtdna = read.csv('../../Paper_materials_2024/Birds_dataset_paper.csv')
df_codons = df_mtdna[,c(2,32:95)]
df_codons1 = aggregate(. ~ species_name, FUN = mean, data = df_codons)
lose_pro = sum(df_codons1$CCT + df_codons1$CCA + df_codons1$CCG + df_codons1$CCC)
gain_ser = sum(df_codons1$TCT + df_codons1$TCA + df_codons1$TCG + df_codons1$TCC)
gain_leu = sum(df_codons1$CTT + df_codons1$CTA + df_codons1$CTG + df_codons1$CTC)
mega_gain_leu_phe = sum(df_codons1$TTT + df_codons1$TTA + df_codons1$TTG + df_codons1TTC)
mega_gain_leu_phe = sum(df_codons1$TTT + df_codons1$TTA + df_codons1$TTG + df_codons1$TTC)
lose_thr = sum(df_codons1$ACT + df_codons1$ACA + df_codons1$ACG + df_codons1$ACC)
gain_ala = sum(df_codons1$GCT + df_codons1$GCA + df_codons1$GCG + df_codons1$GCC)
gain_ile_met = sum(df_codons1$ATT + df_codons1$ATA + df_codons1$ATG + df_codons1$ATC)
mega_gain_val = sum(df_codons1$GTT + df_codons1$GTA + df_codons1$GTG + df_codons1$GTC)
lose_gis_gln = sum(df_codons1$CAT + df_codons1$CAA + df_codons1$CAG + df_codons1$TTC)
lose_gis_gln = sum(df_codons1$CAT + df_codons1$CAA + df_codons1$CAG + df_codons1$CTC)
lose_gis_gln = sum(df_codons1$CAT + df_codons1$CAA + df_codons1$CAG + df_codons1$CAC)
gain_tyr_stop = sum(df_codons1$TAT + df_codons1$TAA + df_codons1$TAG + df_codons1$TAC)
gain_arg = sum(df_codons1$CGT + df_codons1$CGA + df_codons1$CGG + df_codons1$CGC)
mega_gain_cys_stop_trp = sum(df_codons1$TGT + df_codons1$TGA + df_codons1$TGG + df_codons1$TGC)
lose_asn_lys = sum(df_codons1$AAT + df_codons1$AAA + df_codons1$AAG + df_codons1$AAC)
gain_serg_arg = sum(df_codons1$AGT + df_codons1$AGA + df_codons1$AGG + df_codons1$AGC)
gain_asp_glu = sum(df_codons1$GAT + df_codons1$GAA + df_codons1$GAG + df_codons1$GAC)
mega_gain_gly = sum(df_codons1$GGT + df_codons1$GGA + df_codons1$GGG + df_codons1$GGC)
rm(list = ls(all=TRUE))
lose_asn_lys = sum(df_codons1$TTT + df_codons1$TTA + df_codons1$TTG + df_codons1$TTC) #lose_asn_lys
df_mtdna = read.csv('../../Paper_materials_2024/Birds_dataset_paper.csv')
df_codons = df_mtdna[,c(2,32:95)]
df_codons1 = aggregate(. ~ species_name, FUN = mean, data = df_codons)
lose_asn_lys = sum(df_codons1$TTT + df_codons1$TTA + df_codons1$TTG + df_codons1$TTC) #lose_asn_lys
gain_asp_glu = sum(df_codons1$CTT + df_codons1$CTA + df_codons1$CTG + df_codons1$CTC) #gain_asp_glu
gain_serg_arg = sum(df_codons1$TCT + df_codons1$TCA + df_codons1$TCG + df_codons1$TCC) #gain_serg_arg
mega_gain_gly = sum(df_codons1$CCT + df_codons1$CCA + df_codons1$CCG + df_codons1$CCC) #mega_gain_gly
lose_gis_gln = sum(df_codons1$GTT + df_codons1$GTA + df_codons1$GTG + df_codons1$GTC) #lose_gis_gln
gain_tyr_stop = sum(df_codons1$ATT + df_codons1$ATA + df_codons1$ATG + df_codons1$ATC) #gain_tyr_stop
gain_arg = sum(df_codons1$GCT + df_codons1$GCA + df_codons1$GCG + df_codons1$GCC) #gain_arg
mega_gain_cys_stop_trp = sum(df_codons1$ACT + df_codons1$ACA + df_codons1$ACG + df_codons1$ACC) #mega_gain_cys_stop_trp
lose_thr = sum(df_codons1$TGT + df_codons1$TGA + df_codons1$TGG + df_codons1$TGC) #lose_thr
gain_ala = sum(df_codons1$CGT + df_codons1$CGA + df_codons1$CGG + df_codons1$CGC) #gain ala
gain_ile_met = sum(df_codons1$TAT + df_codons1$TAA + df_codons1$TAG + df_codons1$TAC) #gain_ile_met
mega_gain_val = sum(df_codons1$CAT + df_codons1$CAA + df_codons1$CAG + df_codons1$CAC) #mega_gain_val
lose_pro = sum(df_codons1$GGT + df_codons1$GGA + df_codons1$GGG + df_codons1$GGC)#lose pro
gain_leu = sum(df_codons1$GAT + df_codons1$GAA + df_codons1$GAG + df_codons1$GAC) #gain_leu
gain_ser = sum(df_codons1$AGT + df_codons1$AGA + df_codons1$AGG + df_codons1$AGC) #gain_ser
mega_gain_leu_phe = sum(df_codons1$AAT + df_codons1$AAA + df_codons1$AAG + df_codons1$AAC) #mega_gain_leu_phe
library(ggplot2)
lose_his_gln = sum(df_codons1$GTT + df_codons1$GTA + df_codons1$GTG + df_codons1$GTC) #lose_gis_gln
first_sector = data.frame(mega_gain_cys_stop_trp, gain_arg, gain_tyr_stop , lose_his_gln)
View(first_sector)
df2 <- data.frame(Row= c(row(first_sector)),
Col=names(first_sector)[col(first_sector)], stringsAsFactors=FALSE)
View(df2)
first_sector$counter = 1
country_w_to_L<- reshape(data=first_sector, idvar="counter",
varying = c("mega_gain_cys_stop_trp, gain_arg, gain_tyr_stop, lose_his_gln"),
v.name=c("value"),
times=cc("mega_gain_cys_stop_trp, gain_arg, gain_tyr_stop, lose_his_gln"),
new.row.names = 1:1000,
direction="long")
country_w_to_L<- reshape(data=first_sector, idvar="counter",
varying = c("mega_gain_cys_stop_trp, gain_arg, gain_tyr_stop, lose_his_gln"),
v.name=c("value"),
times=c("mega_gain_cys_stop_trp, gain_arg, gain_tyr_stop, lose_his_gln"),
new.row.names = 1:1000,
direction="long")
country_w_to_L<- reshape(data=first_sector, idvar="counter",
varying = c("mega_gain_cys_stop_trp", "gain_arg", "gain_tyr_stop", "lose_his_gln"),
v.name=c("value"),
times=c("mega_gain_cys_stop_trp, gain_arg, gain_tyr_stop, lose_his_gln"),
new.row.names = 1:1000,
direction="long")
first_sector = data.frame(mega_gain_cys_stop_trp, gain_arg, gain_tyr_stop , lose_his_gln)
#first_sector = data.frame(mega_gain_cys_stop_trp, gain_arg, gain_tyr_stop , lose_his_gln)
first_sector = data.frame()
first_sector = first_sector + c("lose_his_gln", lose_his_gln)
first_sector = rbind(first_sector,c("lose_his_gln", lose_his_gln))
View(first_sector)
first_sector = rbind(first_sector,c("gain_tyr_stop", gain_tyr_stop))
first_sector = rbind(first_sector,c("gain_arg", gain_arg))
first_sector = rbind(first_sector,c("mega_gain_cys_stop_trp", mega_gain_cys_stop_trp))
second_sector = data.frame()
third_sector = data.frame()
fourth_sector = data.frame()
#first_sector = data.frame(mega_gain_cys_stop_trp, gain_arg, gain_tyr_stop , lose_his_gln)
first_sector = data.frame()
first_sector = rbind(first_sector,c("lose_his_gln", lose_his_gln))
first_sector = rbind(first_sector,c("gain_tyr_stop", gain_tyr_stop))
first_sector = rbind(first_sector,c("gain_arg", gain_arg))
first_sector = rbind(first_sector,c("mega_gain_cys_stop_trp", mega_gain_cys_stop_trp))
second_sector = data.frame()
second_sector = rbind(second_sector, c("lose_pro", lose_pro))
second_sector = rbind(second_sector, c("gain_leu", gain_leu))
second_sector = rbind(second_sector, c("gain_ser", gain_ser))
second_sector = rbind(second_sector, c("mega_gain_leu_phe", mega_gain_leu_phe))
third_sector = data.frame()
third_sector = rbind(third_sector, c("lose_thr", lose_thr))
third_sector = rbind(third_sector, c("gain_ala", gain_ala))
third_sector = rbind(third_sector, c("gain_ile_met", gain_ile_met))
third_sector = rbind(third_sector, c("mega_gain_val", mega_gain_val))
fourth_sector = data.frame()
fourth_sector = rbind("lose_asn_lys", lose_asn_lys)
fourth_sector = rbind("gain_asp_glu", gain_asp_glu)
fourth_sector = rbind("gain_serg_arg", gain_serg_arg)
fourth_sector = rbind("mega_gain_gly", mega_gain_gly)
names(first_sector) = c(aa_type, value)
names(first_sector) = c("aa_type", "value")
names(second_sector) = c("aa_type", "value")
names(third_sector) = c("aa_type", "value")
names(fourth_sector) = c("aa_type", "value")
ggplot(first_sector, aes(x = aa_type, y = value))+
geom_boxplot()
ggplot(first_sector, aes(x = aa_type, y = value))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
first_sector$value = as.numeric(as.character(first_sector$value))
second_sector$value = as.numeric(as.character(second_sector$value))
third_sector$value = as.numeric(as.character(third_sector$value))
fourth_sector$value = as.numeric(as.character(fourth_sector$value))
ggplot(first_sector, aes(x = aa_type, y = value))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(second_sector, aes(x = aa_type, y = value))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(third_sector, aes(x = aa_type, y = value))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(fourth_sector, aes(x = aa_type, y = value))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
fourth_sector = data.frame()
fourth_sector = rbind("lose_asn_lys", lose_asn_lys)
fourth_sector = rbind("gain_asp_glu", gain_asp_glu)
fourth_sector = rbind("gain_serg_arg", gain_serg_arg)
fourth_sector = rbind("mega_gain_gly", mega_gain_gly)
names(fourth_sector) = c("aa_type", "value")
fourth_sector = data.frame()
fourth_sector = rbind("lose_asn_lys", lose_asn_lys)
fourth_sector = data.frame()
fourth_sector = rbind(fourth_sector, c("lose_asn_lys", lose_asn_lys))
fourth_sector = rbind(fourth_sector, c("gain_asp_glu", gain_asp_glu))
fourth_sector = rbind(fourth_sector, c("gain_serg_arg", gain_serg_arg))
fourth_sector = rbind(fourth_sector, c("mega_gain_gly", mega_gain_gly))
names(fourth_sector) = c("aa_type", "value")
fourth_sector$value = as.numeric(as.character(fourth_sector$value))
ggplot(fourth_sector, aes(x = aa_type, y = value))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
rm(list = ls(all=TRUE))
rm(list = ls(all=TRUE))
library(ggplot2)
df_mtdna = read.csv('../../Paper_materials_2024/Birds_dataset_paper.csv')
df_codons = df_mtdna[,c(2,32:95)]
names(df_mtdna)
df_fly = read.csv('../../Paper_materials_2024/flying_birds.csv')
View(df_fly)
df_fly = na.omit(df_fly)
df_fly = df_fly[,c(2,3)]
names(df_fly) = c('species_name', 'flightless')
df_codons1 = aggregate(. ~ species_name, FUN = mean, data = df_codons)
mega_gain_gly = sum(df_codons1$CCT + df_codons1$CCA + df_codons1$CCG + df_codons1$CCC) #mega_gain_gly
gain_serg_arg = sum(df_codons1$TCT + df_codons1$TCA + df_codons1$TCG + df_codons1$TCC) #gain_serg_arg
gain_asp_glu = sum(df_codons1$CTT + df_codons1$CTA + df_codons1$CTG + df_codons1$CTC) #gain_asp_glu
lose_asn_lys = sum(df_codons1$TTT + df_codons1$TTA + df_codons1$TTG + df_codons1$TTC) #lose_asn_lys
mega_gain_cys_stop_trp = sum(df_codons1$ACT + df_codons1$ACA + df_codons1$ACG + df_codons1$ACC) #mega_gain_cys_stop_trp
gain_arg = sum(df_codons1$GCT + df_codons1$GCA + df_codons1$GCG + df_codons1$GCC) #gain_arg
gain_tyr_stop = sum(df_codons1$ATT + df_codons1$ATA + df_codons1$ATG + df_codons1$ATC) #gain_tyr_stop
lose_his_gln = sum(df_codons1$GTT + df_codons1$GTA + df_codons1$GTG + df_codons1$GTC) #lose_gis_gln
mega_gain_val = sum(df_codons1$CAT + df_codons1$CAA + df_codons1$CAG + df_codons1$CAC) #mega_gain_val
gain_ile_met = sum(df_codons1$TAT + df_codons1$TAA + df_codons1$TAG + df_codons1$TAC) #gain_ile_met
gain_ala = sum(df_codons1$CGT + df_codons1$CGA + df_codons1$CGG + df_codons1$CGC) #gain ala
lose_thr = sum(df_codons1$TGT + df_codons1$TGA + df_codons1$TGG + df_codons1$TGC) #lose_thr
mega_gain_leu_phe = sum(df_codons1$AAT + df_codons1$AAA + df_codons1$AAG + df_codons1$AAC) #mega_gain_leu_phe
gain_ser = sum(df_codons1$AGT + df_codons1$AGA + df_codons1$AGG + df_codons1$AGC) #gain_ser
gain_leu = sum(df_codons1$GAT + df_codons1$GAA + df_codons1$GAG + df_codons1$GAC) #gain_leu
lose_pro = sum(df_codons1$GGT + df_codons1$GGA + df_codons1$GGG + df_codons1$GGC)#lose pro
#first_sector = data.frame(mega_gain_cys_stop_trp, gain_arg, gain_tyr_stop , lose_his_gln)
first_sector = data.frame()
first_sector = rbind(first_sector,c("lose_his_gln", lose_his_gln))
first_sector = rbind(first_sector,c("gain_tyr_stop", gain_tyr_stop))
first_sector = rbind(first_sector,c("gain_arg", gain_arg))
first_sector = rbind(first_sector,c("mega_gain_cys_stop_trp", mega_gain_cys_stop_trp))
names(first_sector) = c("aa_type", "value")
View(first_sector)
View(df_codons1)
df_codons1$mega_gain_gly = sum(df_codons1$CCT + df_codons1$CCA + df_codons1$CCG + df_codons1$CCC)
df_codons1$mega_gain_gly
beasts = df_codons1$species_name
df_data = data.frame()
a = data.frame(df_codons1[df_codons1$species_name == i,])
for (i in beasts)
{
a = data.frame(df_codons1[df_codons1$species_name == i,])
}
View(a)
for (i in beasts)
{
a = data.frame(df_codons1[df_codons1$species_name == i,])
a$mega_gain_gly = sum(a$CCT + a$CCA + a$CCG + a$CCC) #mega_gain_gly
a$gain_serg_arg = sum(a$TCT + a$TCA + a$TCG + a$TCC) #gain_serg_arg
a$gain_asp_glu = sum(a$CTT + a$CTA + a$CTG + a$CTC) #gain_asp_glu
a$lose_asn_lys = sum(a$TTT + a$TTA + a$TTG + a$TTC) #lose_asn_lys
a$mega_gain_cys_stop_trp = sum(a$ACT + a$ACA + a$ACG + a$ACC) #mega_gain_cys_stop_trp
a$gain_arg = sum(a$GCT + a$GCA + a$GCG + a$GCC) #gain_arg
a$gain_tyr_stop = sum(a$ATT + a$ATA + a$ATG + a$ATC) #gain_tyr_stop
a$lose_his_gln = sum(a$GTT + a$GTA + a$GTG + a$GTC) #lose_gis_gln
a$mega_gain_val = sum(a$CAT + a$CAA + a$CAG + a$CAC) #mega_gain_val
a$gain_ile_met = sum(a$TAT + a$TAA + a$TAG + a$TAC) #gain_ile_met
a$gain_ala = sum(a$CGT + a$CGA + a$CGG + a$CGC) #gain ala
a$lose_thr = sum(a$TGT + a$TGA + a$TGG + a$TGC) #lose_thr
a$mega_gain_leu_phe = sum(a$AAT + a$AAA + a$AAG + a$AAC) #mega_gain_leu_phe
a$gain_ser = sum(a$AGT + a$AGA + a$AGG + a$AGC) #gain_ser
a$gain_leu = sum(a$GAT + a$GAA + a$GAG + a$GAC) #gain_leu
a$lose_pro = sum(a$GGT + a$GGA + a$GGG + a$GGC)#lose pro
df_data = rbind(df_data, a)
}
View(df_data)
df_data
df_data = merge(df_data, df_fly)
ggplot(df_data, aes(x = flightless, y = mega_gain_gly))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
df_fly = read.csv('flying_birds.csv')
View(df_fly)
df_fly = read.csv('../../Paper_materials_2024/flying_birds.csv')
View(df_fly)
df_fly = df_fly[,c(2,3,4)]
names(df_fly) = c('species_name', 'flightless', 'diving')
df_fly_clean1 = df_fly[df_fly$flightless =='Flightless',]
df_fly_clean= df_fly[df_fly$flightless == 'Almost_flightless',]
df_fly_clean = na.omit(df_fly_clean)
df_fly_clean1 = na.omit(df_fly_clean1)
df_dive = df_fly
df_fly = df_fly[df_fly$flightless != 'Flightless',]
df_fly = df_fly[df_fly$flightless != 'Almost_flightless',]
df_fly_clean$flightless = 'Tinamiformes'
df_fly_clean1$flightless = 'Tinamiformes'
df_fly_big = rbind(df_fly, df_fly_clean, df_fly_clean1)
df_fly_final = merge(df_fly_big, df_short)
df_fly_final = df_fly_final[df_fly_final$flightless != 'Galliformes',]
rm(list = ls(all=TRUE))
library(ggplot2)
df_mtdna = read.csv('../../Paper_materials_2024/Birds_dataset_paper.csv')
df_codons = df_mtdna[,c(2,32:95)]
df_fly = read.csv('../../Paper_materials_2024/flying_birds.csv')
df_codons1 = aggregate(. ~ species_name, FUN = mean, data = df_codons)
df_fly = df_fly[,c(2,3,4)]
names(df_fly) = c('species_name', 'flightless', 'diving')
df_fly_clean1 = df_fly[df_fly$flightless =='Flightless',]
df_fly_clean= df_fly[df_fly$flightless == 'Almost_flightless',]
df_fly_clean = na.omit(df_fly_clean)
df_fly_clean1 = na.omit(df_fly_clean1)
df_dive = df_fly
df_fly = df_fly[df_fly$flightless != 'Flightless',]
df_fly = df_fly[df_fly$flightless != 'Almost_flightless',]
df_fly_clean$flightless = 'Tinamiformes'
df_fly_clean1$flightless = 'Tinamiformes'
df_fly_big = rbind(df_fly, df_fly_clean, df_fly_clean1)
beasts = df_codons1$species_name
df_data = data.frame()
for (i in beasts)
{
a = data.frame(df_codons1[df_codons1$species_name == i,])
a$mega_gain_gly = sum(a$CCT + a$CCA + a$CCG + a$CCC) #mega_gain_gly
a$gain_serg_arg = sum(a$TCT + a$TCA + a$TCG + a$TCC) #gain_serg_arg
a$gain_asp_glu = sum(a$CTT + a$CTA + a$CTG + a$CTC) #gain_asp_glu
a$lose_asn_lys = sum(a$TTT + a$TTA + a$TTG + a$TTC) #lose_asn_lys
a$mega_gain_cys_stop_trp = sum(a$ACT + a$ACA + a$ACG + a$ACC) #mega_gain_cys_stop_trp
a$gain_arg = sum(a$GCT + a$GCA + a$GCG + a$GCC) #gain_arg
a$gain_tyr_stop = sum(a$ATT + a$ATA + a$ATG + a$ATC) #gain_tyr_stop
a$lose_his_gln = sum(a$GTT + a$GTA + a$GTG + a$GTC) #lose_gis_gln
a$mega_gain_val = sum(a$CAT + a$CAA + a$CAG + a$CAC) #mega_gain_val
a$gain_ile_met = sum(a$TAT + a$TAA + a$TAG + a$TAC) #gain_ile_met
a$gain_ala = sum(a$CGT + a$CGA + a$CGG + a$CGC) #gain ala
a$lose_thr = sum(a$TGT + a$TGA + a$TGG + a$TGC) #lose_thr
a$mega_gain_leu_phe = sum(a$AAT + a$AAA + a$AAG + a$AAC) #mega_gain_leu_phe
a$gain_ser = sum(a$AGT + a$AGA + a$AGG + a$AGC) #gain_ser
a$gain_leu = sum(a$GAT + a$GAA + a$GAG + a$GAC) #gain_leu
a$lose_pro = sum(a$GGT + a$GGA + a$GGG + a$GGC)#lose pro
df_data = rbind(df_data, a)
}
df_fly_final = merge(df_fly_big, df_data)
View(df_fly_final)
df_fly_final = df_fly_final[df_fly_final$flightless != 'Galliformes',]
df_fly_final[df_fly_final$flightless == '0',]$flightless = 'Flying birds'
ggplot(df_fly_final, aes(x = flightless, y = mega_gain_gly))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
View(df_dive)
ggplot(df_fly_final, aes(x = flightless, y = mega_gain_gly))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
xlim('Flying birds', 'Tinamiformes', 'Apterygiformes', 'Casuariiformes', 'Struthioniformes', 'Rheiformes', "Psittaciformes", "Columbiformes", "Eurypygiformes", "Gruiformes", "Sphenisciformes")
ggplot(df_fly_final, aes(x = flightless, y = mega_gain_gly))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
xlim('Flying birds', 'Tinamiformes', 'Apterygiformes', 'Casuariiformes', 'Struthioniformes', 'Rheiformes', "Psittaciformes", "Columbiformes", "Eurypygiformes", "Gruiformes", "Sphenisciformes")
ggplot(df_fly_final, aes(x = flightless, y = gain_serg_arg))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
xlim('Flying birds', 'Tinamiformes', 'Apterygiformes', 'Casuariiformes', 'Struthioniformes', 'Rheiformes', "Psittaciformes", "Columbiformes", "Eurypygiformes", "Gruiformes", "Sphenisciformes")
ggplot(df_fly_final, aes(x = flightless, y = gain_asp_glu))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
xlim('Flying birds', 'Tinamiformes', 'Apterygiformes', 'Casuariiformes', 'Struthioniformes', 'Rheiformes', "Psittaciformes", "Columbiformes", "Eurypygiformes", "Gruiformes", "Sphenisciformes")
ggplot(df_fly_final, aes(x = flightless, y = lose_asn_lys))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
xlim('Flying birds', 'Tinamiformes', 'Apterygiformes', 'Casuariiformes', 'Struthioniformes', 'Rheiformes', "Psittaciformes", "Columbiformes", "Eurypygiformes", "Gruiformes", "Sphenisciformes")
ggplot(df_fly_final, aes(x = flightless, y = mega_gain_cys_stop_trp))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
xlim('Flying birds', 'Tinamiformes', 'Apterygiformes', 'Casuariiformes', 'Struthioniformes', 'Rheiformes', "Psittaciformes", "Columbiformes", "Eurypygiformes", "Gruiformes", "Sphenisciformes")
ggplot(df_fly_final, aes(x = flightless, y = gain_arg))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
xlim('Flying birds', 'Tinamiformes', 'Apterygiformes', 'Casuariiformes', 'Struthioniformes', 'Rheiformes', "Psittaciformes", "Columbiformes", "Eurypygiformes", "Gruiformes", "Sphenisciformes")
ggplot(df_fly_final, aes(x = flightless, y = gain_tyr_stop))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
xlim('Flying birds', 'Tinamiformes', 'Apterygiformes', 'Casuariiformes', 'Struthioniformes', 'Rheiformes', "Psittaciformes", "Columbiformes", "Eurypygiformes", "Gruiformes", "Sphenisciformes")
ggplot(df_fly_final, aes(x = flightless, y = lose_gis_gln))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
xlim('Flying birds', 'Tinamiformes', 'Apterygiformes', 'Casuariiformes', 'Struthioniformes', 'Rheiformes', "Psittaciformes", "Columbiformes", "Eurypygiformes", "Gruiformes", "Sphenisciformes")
ggplot(df_fly_final, aes(x = flightless, y = lose_his_gln))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
xlim('Flying birds', 'Tinamiformes', 'Apterygiformes', 'Casuariiformes', 'Struthioniformes', 'Rheiformes', "Psittaciformes", "Columbiformes", "Eurypygiformes", "Gruiformes", "Sphenisciformes")
ggplot(df_fly_final, aes(x = flightless, y = mega_gain_val))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
xlim('Flying birds', 'Tinamiformes', 'Apterygiformes', 'Casuariiformes', 'Struthioniformes', 'Rheiformes', "Psittaciformes", "Columbiformes", "Eurypygiformes", "Gruiformes", "Sphenisciformes")
ggplot(df_fly_final, aes(x = flightless, y = gain_ile_met))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
xlim('Flying birds', 'Tinamiformes', 'Apterygiformes', 'Casuariiformes', 'Struthioniformes', 'Rheiformes', "Psittaciformes", "Columbiformes", "Eurypygiformes", "Gruiformes", "Sphenisciformes")
ggplot(df_fly_final, aes(x = flightless, y = gain_ala))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
xlim('Flying birds', 'Tinamiformes', 'Apterygiformes', 'Casuariiformes', 'Struthioniformes', 'Rheiformes', "Psittaciformes", "Columbiformes", "Eurypygiformes", "Gruiformes", "Sphenisciformes")
ggplot(df_fly_final, aes(x = flightless, y = lose_thr))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
xlim('Flying birds', 'Tinamiformes', 'Apterygiformes', 'Casuariiformes', 'Struthioniformes', 'Rheiformes', "Psittaciformes", "Columbiformes", "Eurypygiformes", "Gruiformes", "Sphenisciformes")
ggplot(df_fly_final, aes(x = flightless, y = mega_gain_leu_phe))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
xlim('Flying birds', 'Tinamiformes', 'Apterygiformes', 'Casuariiformes', 'Struthioniformes', 'Rheiformes', "Psittaciformes", "Columbiformes", "Eurypygiformes", "Gruiformes", "Sphenisciformes")
ggplot(df_fly_final, aes(x = flightless, y = gain_ser))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
xlim('Flying birds', 'Tinamiformes', 'Apterygiformes', 'Casuariiformes', 'Struthioniformes', 'Rheiformes', "Psittaciformes", "Columbiformes", "Eurypygiformes", "Gruiformes", "Sphenisciformes")
ggplot(df_fly_final, aes(x = flightless, y = gain_leu))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
xlim('Flying birds', 'Tinamiformes', 'Apterygiformes', 'Casuariiformes', 'Struthioniformes', 'Rheiformes', "Psittaciformes", "Columbiformes", "Eurypygiformes", "Gruiformes", "Sphenisciformes")
ggplot(df_fly_final, aes(x = flightless, y = lose pro))+
ggplot(df_fly_final, aes(x = flightless, y = lose_pro))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
xlim('Flying birds', 'Tinamiformes', 'Apterygiformes', 'Casuariiformes', 'Struthioniformes', 'Rheiformes', "Psittaciformes", "Columbiformes", "Eurypygiformes", "Gruiformes", "Sphenisciformes")
rm(list = ls(all=TRUE))
