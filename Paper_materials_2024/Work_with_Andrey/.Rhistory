is.ultrametric(feathertree)
is.binary(feathertree)
is.rooted(feathertree)
#PGLS  for binar metrics
#flying all
df_fly = read.csv('../../Paper_materials_2024/flying_birds.csv')
df_fly = df_fly[,c(2,3)]
names(df_fly) = c('species_name', 'flightless')
df_fly = na.omit(df_fly)
df_fly$flightless_binar = 0
df_fly[df_fly$flightless != '0',]$flightless_binar = 1
names(DNA) = c('species_name', 'GhAhSkew', 'ThChSkew')
df_fly_dna = merge(df_fly, DNA)
df_fly_dna$species_name = gsub(' ', '_', df_fly_dna$species_name)
rownames(df_fly_dna) = df_fly_dna$species_name
listSkew = df_fly_dna$species_name
listTree <- feathertree$tip.label
SpeciesToDrop <- setdiff(listTree, listSkew)
drop.tip(feathertree, SpeciesToDrop) -> Fly_skew_tree
rownames(df_fly_dna) <- df_fly_dna[,1]
df_fly_dna <- df_fly_dna[match(Fly_skew_tree$tip.label,rownames(df_fly_dna)),]
attach(df_fly_dna)
names(GhAhSkew) = rownames(df_fly_dna)
names(flightless_binar) = rownames(df_fly_dna)
name.check(Fly_skew_tree, df_fly_dna)
library(nlme)
m <- gls(GhAhSkew~flightless_binar, data=df_fly_dna, correlation=corPagel(value = 1, Fly_skew_tree, form = ~species_name, fixed=FALSE), method="ML") # ML estimation
View(df_fly)
df_fly = df_fly[df_fly$flightless != 'Sphenisciformes',]
df_fly_dna = merge(df_fly, DNA)
df_fly_dna$species_name = gsub(' ', '_', df_fly_dna$species_name)
rownames(df_fly_dna) = df_fly_dna$species_name
listSkew = df_fly_dna$species_name
listTree <- feathertree$tip.label
SpeciesToDrop <- setdiff(listTree, listSkew)
drop.tip(feathertree, SpeciesToDrop) -> Fly_skew_tree
rownames(df_fly_dna) <- df_fly_dna[,1]
df_fly_dna <- df_fly_dna[match(Fly_skew_tree$tip.label,rownames(df_fly_dna)),]
attach(df_fly_dna)
names(GhAhSkew) = rownames(df_fly_dna)
names(flightless_binar) = rownames(df_fly_dna)
name.check(Fly_skew_tree, df_fly_dna)
library(nlme)
m <- gls(GhAhSkew~flightless_binar, data=df_fly_dna, correlation=corPagel(value = 1, Fly_skew_tree, form = ~species_name, fixed=FALSE), method="ML") # ML estimation
summary(m)
library(caper)
CompBMR <- comparative.data(Fly_skew_tree, df_fly_dna, 'species_name', na.omit=FALSE, vcv=TRUE, vcv.dim=3) #vcv.dim=2 is default
m_extra <- pgls(GhAhSkew~flightless_binar, data=CompBMR, lambda='ML') #The branch length transformations can be optimised between bounds using maximum likelihood by setting the value for a transformation to 'ML'
summary(m_extra)
rm(list = ls(all=TRUE))
df_flighless = read.csv('Flightless_birds_from_wiki.csv')
View(df_flighless)
df_flighless = read.csv('Flightless_birds_from_wiki.csv', header = TRUE)
View(df_flighless)
df_flighless = read.csv('Flightless_birds_from_wiki.csv', header = F)
names(df_flighless) = c('species_name')
DNA <- read.csv2("Birds_dataset_paper.csv", header=T)
DNA <- DNA[c('Species', 'ghahSkew', 'chthSkew')]
DNA <- aggregate (DNA[,-1], by=list(DNA$Species), mean)
View(DNA)
names(DNA) = c('species_name', 'GhAhSkew', 'ThChSkew')
df_check = merge(df_flighless,DNA)
View(df_check)
df_fly = read.csv('../../Paper_materials_2024/flying_birds.csv')
View(df_fly)
df_fly_check = df_fly[df_fly$Flightless != '0']
df_fly_check = df_fly[df_fly$Flightless != '0',]
View(df_fly_check)
View(df_fly)
df_fly_check = df_fly[df_fly$Flightless != 0,]
View(df_fly_check)
df_fly = na.omit(df_fly)
df_fly_check = df_fly[df_fly$Flightless != 0,]
View(df_check)
df_check1 = merge(DNA, df_fly)
df_fly = df_fly[,c(2,3)]
names(df_fly) = c('species_name', 'flightless')
df_check1 = merge(DNA, df_fly)
View(df_check1)
df_check2 = merge(df_check1, df_flighless)
View(df_check2)
rm(list = ls(all=TRUE))
df_mtdna = read.csv('../../Paper_materials_2024/Birds_dataset_paper.csv')
View(df_mtdna)
View(df_mtdna)
rm(list = ls(all=TRUE))
rm(list = ls(all=TRUE))
library(ggfortify)
library(ggplot2)
library(ggpubr)
library(ggbiplot)
library(phytools)
library(nlme)
library(geiger)
library(ggtree)
library(stringr)
library(dplyr)
df11 = read.csv ('Species_life-histories.csv')
df12 = read.csv('GlobalBMRbase.csv')
df_mtdna = read.csv('../../Paper_materials_2024/Birds_dataset_paper.csv')
df_mtdna_orders = unique(df_mtdna[,c(2,5)])
df12 = read.csv('GlobalBMRbase.csv')
df12 = read.csv('GlobalBMRbase.csv', sep = ';')
df_mtdna = read.csv('../../Paper_materials_2024/Birds_dataset_paper.csv')
df_mtdna_orders = unique(df_mtdna[,c(2,5)])
df_mtdna_orders$taxonomy = sub('formes.*', '', df_mtdna_orders$taxonomy)
df_mtdna_orders$taxonomy = sub('.*\\ ', '', df_mtdna_orders$taxonomy)
df_mtdna_orders$taxonomy = paste(df_mtdna_orders$taxonomy, 'formes', sep = '')
names(df_mtdna_orders) = c('Species', 'Orders')
names_v = unique(df_mtdna$species_name)
df_mtdna$Mass = as.numeric(as.character(df_mtdna$Mass))
df_short = data.frame()
for (i in names_v)
{
df1 = df_mtdna[df_mtdna$species_name == i,]
a = sum(df1$ghahSkew)/12
b = sum(df1$chthSkew)/12
v = sum(df1$Mass)/12
ab = c(i, a, b, v)
df_short = rbind(df_short, ab)
}
names(df_short) = c('Species', 'GhAhSkew', 'ThChSkew', 'Mass')
df_short$GhAhSkew = as.numeric(df_short$GhAhSkew)
df12_bmr = df12[df12$Trait == 'BMR',]
names_v = unique(df12_bmr$Original_Name)
df_short1 = data.frame()
for (i in names_v)
{
df1 = df12_bmr[df12_bmr$Original_Name == i,]
a1 = sum(df1$TraitValue)
a2 = nrow(df1)
a = a1/a2
b = 'BMR'
ab = c(i, b, a)
df_short1 = rbind(df_short1, ab)
}
names(df_short1) = c('Species', 'Trait', 'BMR_value')
for (i in names_v)
{
df1 = df12_bmr[df12_bmr$Original_Name == i,]
a1 = sum(df1$TraitValue)
a2 = nrow(df1)
a = a1/a2
b = 'BMR'
ab = c(i, b, a)
df_short1 = rbind(df_short1, ab)
}
View(df12_bmr)
names_v = unique(df12_bmr$Species)
df_short1 = data.frame()
for (i in names_v)
{
df1 = df12_bmr[df12_bmr$Species == i,]
a1 = sum(df1$TraitValue)
a2 = nrow(df1)
a = a1/a2
b = 'BMR'
ab = c(i, b, a)
df_short1 = rbind(df_short1, ab)
}
View(df1)
df12_bmr$TraitValue = as.numeric(df12_bmr$TraitValue)
for (i in names_v)
{
df1 = df12_bmr[df12_bmr$Species == i,]
a1 = sum(df1$TraitValue)
a2 = nrow(df1)
a = a1/a2
b = 'BMR'
ab = c(i, b, a)
df_short1 = rbind(df_short1, ab)
}
names(df_short1) = c('Species', 'Trait', 'BMR_value')
View(df_short1)
df_short$GhAhSkew = as.numeric(df_short$GhAhSkew)
rm(list = ls(all=TRUE))
df11 = read.csv ('Species_life-histories.csv')
df12 = read.csv('GlobalBMRbase.csv', sep = ';')
df_mtdna = read.csv('../../Paper_materials_2024/Birds_dataset_paper.csv')
df_mtdna_orders = unique(df_mtdna[,c(2,5)])
df_mtdna_orders$taxonomy = sub('formes.*', '', df_mtdna_orders$taxonomy)
df_mtdna_orders$taxonomy = sub('.*\\ ', '', df_mtdna_orders$taxonomy)
df_mtdna_orders$taxonomy = paste(df_mtdna_orders$taxonomy, 'formes', sep = '')
names(df_mtdna_orders) = c('Species', 'Orders')
names_v = unique(df_mtdna$species_name)
df_mtdna$Mass = as.numeric(as.character(df_mtdna$Mass))
df_short = data.frame()
for (i in names_v)
{
df1 = df_mtdna[df_mtdna$species_name == i,]
a = sum(df1$ghahSkew)/12
b = sum(df1$chthSkew)/12
v = sum(df1$Mass)/12
ab = c(i, a, b, v)
df_short = rbind(df_short, ab)
}
names(df_short) = c('Species', 'GhAhSkew', 'ThChSkew', 'Mass')
df_short$GhAhSkew = as.numeric(df_short$GhAhSkew)
df12_bmr = df12[df12$Trait == 'BMR',]
names_v = unique(df12_bmr$Species)
df_short1 = data.frame()
df12_bmr$TraitValue = as.numeric(df12_bmr$TraitValue)
for (i in names_v)
View(df12)
View(df12_bmr)
rm(list = ls(all=TRUE))
df11 = read.csv ('Species_life-histories.csv')
df12 = read.csv('GlobalBMRbase.csv', sep = ';')
View(df12)
df_mtdna = read.csv('../../Paper_materials_2024/Birds_dataset_paper.csv')
df_mtdna_orders = unique(df_mtdna[,c(2,5)])
df_mtdna_orders$taxonomy = sub('formes.*', '', df_mtdna_orders$taxonomy)
df_mtdna_orders$taxonomy = sub('.*\\ ', '', df_mtdna_orders$taxonomy)
df_mtdna_orders$taxonomy = paste(df_mtdna_orders$taxonomy, 'formes', sep = '')
names(df_mtdna_orders) = c('Species', 'Orders')
names_v = unique(df_mtdna$species_name)
df_mtdna$Mass = as.numeric(as.character(df_mtdna$Mass))
df_short = data.frame()
for (i in names_v)
{
df1 = df_mtdna[df_mtdna$species_name == i,]
a = sum(df1$ghahSkew)/12
b = sum(df1$chthSkew)/12
v = sum(df1$Mass)/12
ab = c(i, a, b, v)
df_short = rbind(df_short, ab)
}
names(df_short) = c('Species', 'GhAhSkew', 'ThChSkew', 'Mass')
df_short$GhAhSkew = as.numeric(df_short$GhAhSkew)
View(df12)
df12_bmr = df12[df12$Trait == 'BMR',]
View(df12_bmr)
names_v = unique(df12_bmr$Species)
df_short1 = data.frame()
df12_bmr$TraitValue = as.numeric(df12_bmr$TraitValue)
df12_bmr = df12[df12$Trait == 'BMR',]
View(df_short)
df_short$GhAhSkew = suppressWarnings(as.numeric(df_short$GhAhSkew))
df12_bmr$TraitValue = suppressWarnings(as.numeric(df12_bmr$TraitValue))
df12_bmr = df12[df12$Trait == 'BMR',]
names_v = unique(df12_bmr$Species)
df_short1 = data.frame()
df12_bmr$TraitValue = gsub(',', '.', df12_bmr$TraitValue)
df12_bmr$TraitValue = suppressWarnings(as.numeric(df12_bmr$TraitValue))
for (i in names_v)
{
df1 = df12_bmr[df12_bmr$Species == i,]
a1 = sum(df1$TraitValue)
a2 = nrow(df1)
a = a1/a2
b = 'BMR'
ab = c(i, b, a)
df_short1 = rbind(df_short1, ab)
}
View(df_short1)
names(df_short1) = c('Species', 'Trait', 'BMR_value')
df_short$GhAhSkew = as.numeric(df_short$GhAhSkew)
df_short2 = merge(df_short, df_short1)
View(df_short2)
df_short2$BMR_value = as.numeric(df_short2$BMR_value)
df_short2 = merge(df_short2, df_mtdna_orders)
lmMassBMR = lm(GhAhSkew~log10Mass+log10BMR , data=df_short2)
df_short2$log10BMR = log10(df_short2$BMR_value)
df_short2$Mass = as.numeric(df_short2$Mass)
df_short2$log10Mass = log10(df_short2$Mass)
lmMassBMR = lm(GhAhSkew~log10Mass+log10BMR , data=df_short2)
summary(lmMassBMR)
plot(lmMassBMR)
shapiro.test(rstandard(lmMassBMR))
df_short_pos = df_short2[df_short2$GhAhSkew >= 0,]
df_short_pos$log10GhAhSkew = log10(df_short_pos$GhAhSkew)
lmMassBMR1 = lm(log10GhAhSkew~log(BMR_value) + log(Mass), data=df_short_pos)
lmMassBMR12 = lm(GhAhSkew~log(BMR_value) + log(Mass), data=df_short_pos)
summary(lmMassBMR1)
summary(lmMassBMR12)
AIC(lmMassBMR12, lmMassBMR1)
rm(list = ls(all=TRUE))
rm(list = ls(all=TRUE))
library(ggfortify)
library(ggplot2)
library(ggpubr)
library(ggbiplot)
library(phytools)
library(nlme)
library(geiger)
library(ggtree)
library(stringr)
library(dplyr)
df_mtdna = read.csv('../../Paper_materials_2024/Birds_dataset_paper.csv')
names_v = unique(df_mtdna$species_name)
df_mtdna$Mass = as.numeric(as.character(df_mtdna$Mass))
df_short = data.frame()
for (i in names_v)
{
df1 = df_mtdna[df_mtdna$species_name == i,]
a = sum(df1$ghahSkew)/12
b = sum(df1$chthSkew)/12
v = sum(df1$Mass)/12
ab = c(i, a, b, v)
df_short = rbind(df_short, ab)
}
names(df_short) = c('Species', 'GhAhSkew', 'ThChSkew', 'Mass')
df_short$GhAhSkew = as.numeric(df_short$GhAhSkew)
df_temp = read.csv('temp_new_data.csv')
df_big = merge(df_short, df_temp, by = 'Species')
df_big$Mass.x = as.numeric(df_big$Mass.x)
df_big$logmass = log10(df_big$Mass.x)
lm_temp = lm(GhAhSkew~TNZ+logmass, data=df_big)
modelSummary = summary(lm_temp)
modelSummary
ggplot(df_big, aes(x = TNZ, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)+
annotate('text', x = (min(df_big$TNZ)+1), y = min(df_big$GhAhSkew), label = round(modelSummary$coefficients[,4][2], digits = 4))
plot(lm_temp)
ggplot(df_big, aes(x = TNZ, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)+
annotate('text', x = (min(df_big$TNZ)+1), y = min(df_big$GhAhSkew), label = round(modelSummary$coefficients[,4][2], digits = 4))
modelSummary = summary(lm_temp)
modelSummary
ggplot(df_big, aes(x = TNZ, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)+
annotate('text', x = (min(df_big$TNZ)+1), y = min(df_big$GhAhSkew), label = round(modelSummary$coefficients[,4][2], digits = 4))
plot(lm_temp)
rm(list = ls(all=TRUE))
rm(list = ls(all=TRUE))
df_long = read.csv('AVES_longevity.csv')
View(df_long)
firstup <- function(x) {
substr(x, 1, 1) <- toupper(substr(x, 1, 1))
x
}
df_long$scinam = firstup(df_long$scinam)
df_mtdna = read.csv('../../Paper_materials_2024/Birds_dataset_paper.csv')
names_v = unique(df_mtdna$species_name)
df_mtdna$Mass = as.numeric(as.character(df_mtdna$Mass))
df_short = data.frame()
for (i in names_v)
{
df1 = df_mtdna[df_mtdna$species_name == i,]
a = sum(df1$ghahSkew)/12
b = sum(df1$chthSkew)/12
v = sum(df1$Mass)/12
ab = c(i, a, b, v)
df_short = rbind(df_short, ab)
}
names(df_short) = c('Species', 'GhAhSkew', 'ThChSkew', 'Mass')
View(df_short)
names(df_long) = c('Species', 'Longevity', 'Origin', 'Data')
df_long_short = merge(df_long, df_short)
View(df_long_short)
df_long_short$logmass = log10(df_long_short$Mass)
df_long_short$Mass = as.numeric(df_long_short$Mass)
df_long_short$logmass = log10(df_long_short$Mass)
lm_long = lm(GhAhSkew~Longevity, data=df_long_short)
modelSummary = summary(lm_long)
modelSummary
ggplot(df_long_short, aes(x = Longevity, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)+
annotate('text', x = (min(df_long_short$Longevity)+1), y = min(df_long_short$GhAhSkew), label = round(modelSummary$coefficients[,4][2], digits = 4))
library(ggplot2)
ggplot(df_long_short, aes(x = Longevity, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)+
annotate('text', x = (min(df_long_short$Longevity)+1), y = min(df_long_short$GhAhSkew), label = round(modelSummary$coefficients[,4][2], digits = 4))
df_long_short$GhAhSkew = as.numeric(df_long_short$GhAhSkew)
lm_long = lm(GhAhSkew~Longevity, data=df_long_short)
modelSummary = summary(lm_long)
modelSummary
ggplot(df_long_short, aes(x = Longevity, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)+
annotate('text', x = (min(df_long_short$Longevity)+1), y = min(df_long_short$GhAhSkew), label = round(modelSummary$coefficients[,4][2], digits = 4))
plot(lm_long)
shapiro.test(rstandard(lm_temp))
shapiro.test(rstandard(lm_long))
lm_long = lm(GhAhSkew~Longevity+logmass, data=df_long_short)
modelSummary = summary(lm_long)
modelSummary
ggplot(df_long_short, aes(x = Longevity, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)+
annotate('text', x = (min(df_long_short$Longevity)+1), y = min(df_long_short$GhAhSkew), label = round(modelSummary$coefficients[,4][2], digits = 4))
plot(lm_long)
shapiro.test(rstandard(lm_long))
df_long_short$loglong = log10(df_long_short$Longevity)
lm_long = lm(GhAhSkew~loglong+logmass, data=df_long_short)
modelSummary = summary(lm_long)
modelSummary
ggplot(df_long_short, aes(x = Longevity, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)+
annotate('text', x = (min(df_long_short$Longevity)+1), y = min(df_long_short$GhAhSkew), label = round(modelSummary$coefficients[,4][2], digits = 4))
plot(lm_long)
shapiro.test(rstandard(lm_long))
lm_long = lm(GhAhSkew~loglong, data=df_long_short)
modelSummary = summary(lm_long)
modelSummary
rm(list = ls(all=TRUE))
rm(list = ls(all=TRUE))
library(ggfortify)
library(ggplot2)
library(ggpubr)
library(ggbiplot)
library(phytools)
library(nlme)
library(geiger)
library(ggtree)
library(stringr)
library(dplyr)
df_mtdna = read.csv('../../Paper_materials_2024/Birds_dataset_paper.csv')
names_v = unique(df_mtdna$species_name)
df_mtdna$Mass = as.numeric(as.character(df_mtdna$Mass))
df_short = data.frame()
for (i in names_v)
{
df1 = df_mtdna[df_mtdna$species_name == i,]
a = sum(df1$ghahSkew)/12
b = sum(df1$chthSkew)/12
v = sum(df1$Mass)/12
ab = c(i, a, b, v)
df_short = rbind(df_short, ab)
}
names(df_short) = c('Species', 'GhAhSkew', 'ThChSkew', 'Mass')
df_short$GhAhSkew = as.numeric(df_short$GhAhSkew)
df_temp = read.csv('temp_new_data.csv')
df_big = merge(df_short, df_temp, by = 'Species')
df_big$Mass.x = as.numeric(df_big$Mass.x)
df_big$logmass = log10(df_big$Mass.x)
lm_temp = lm(GhAhSkew~TNZ+logmass, data=df_big)
modelSummary = summary(lm_temp)
modelSummary
ggplot(df_big, aes(x = TNZ, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)+
annotate('text', x = (min(df_big$TNZ)+1), y = min(df_big$GhAhSkew), label = round(modelSummary$coefficients[,4][2], digits = 4))
plot(lm_temp)
lm_temp = lm(GhAhSkew~TN, data=df_big)
lm_temp = lm(GhAhSkew~TNZ, data=df_big)
modelSummary = summary(lm_temp)
modelSummary
rm(list = ls(all=TRUE))
df_mtdna = read.csv('../../Paper_materials_2024/Birds_dataset_paper.csv')
rm(list = ls(all=TRUE))
rm(list = ls(all=TRUE))
library(ggfortify)
library(ggplot2)
library(ggpubr)
library(ggbiplot)
library(phytools)
library(nlme)
library(geiger)
library(ggtree)
library(stringr)
library(dplyr)
df11 = read.csv ('Species_life-histories.csv')
View(df11)
df12 = read.csv('GlobalBMRbase.csv', sep = ';')
df_mtdna = read.csv('../../Paper_materials_2024/Birds_dataset_paper.csv')
df_mtdna_orders = unique(df_mtdna[,c(2,5)])
View(df_mtdna_orders)
df_mtdna_orders$taxonomy = sub('formes.*', '', df_mtdna_orders$taxonomy)
df_mtdna_orders$taxonomy = sub('.*\\ ', '', df_mtdna_orders$taxonomy)
df_mtdna_orders$taxonomy = paste(df_mtdna_orders$taxonomy, 'formes', sep = '')
names(df_mtdna_orders) = c('Species', 'Orders')
View(df12)
View(df_mtdna_orders)
df_mtdna = read.csv('../../Paper_materials_2024/Birds_dataset_paper.csv')
df_mtdna_orders = unique(df_mtdna[,c(2,5)])
df_mtdna_orders$taxonomy = sub('formes.*', '', df_mtdna_orders$taxonomy)
df_mtdna_orders$taxonomy = sub('.*\\ ', '', df_mtdna_orders$taxonomy)
df_mtdna_orders$taxonomy = paste(df_mtdna_orders$taxonomy, 'formes', sep = '')
names(df_mtdna_orders) = c('Species', 'Orders')
View(df_mtdna_orders)
names(df_mtdna_orders$Species) = c('Species', 'Orders')
df_mtdna_orders$Species
df_mtdna = read.csv('../../Paper_materials_2024/Birds_dataset_paper.csv')
df_mtdna_orders = unique(df_mtdna[,c(2,5)])
df_mtdna_orders$taxonomy = sub('formes.*', '', df_mtdna_orders$taxonomy)
df_mtdna_orders$taxonomy = sub('.*\\ ', '', df_mtdna_orders$taxonomy)
df_mtdna_orders$taxonomy = paste(df_mtdna_orders$taxonomy, 'formes', sep = '')
names(df_mtdna_orders) = c('Species', 'Orders')
write.csv(df_mtdna_orders, file = 'birds_names.csv')
rm(list = ls(all=TRUE))
rm(list = ls(all=TRUE))
library(ggplot2)
df_mtdna = read.csv('../../Paper_materials_2024/Birds_dataset_paper.csv')
names_v = unique(df_mtdna$species_name)
df_mtdna$Mass = as.numeric(as.character(df_mtdna$Mass))
df_short = data.frame()
for (i in names_v)
{
df1 = df_mtdna[df_mtdna$species_name == i,]
a = sum(df1$ghahSkew)/12
b = sum(df1$chthSkew)/12
v = sum(df1$Mass)/12
ab = c(i, a, b, v)
df_short = rbind(df_short, ab)
}
names(df_short) = c('Species', 'GhAhSkew', 'ThChSkew', 'Mass')
df_short$GhAhSkew = as.numeric(df_short$GhAhSkew)
df_temp = read.csv('temp_new_data.csv')
df_big = merge(df_short, df_temp, by = 'Species')
df_big$Mass.x = as.numeric(df_big$Mass.x)
df_big$logmass = log10(df_big$Mass.x)
lm_temp = lm(GhAhSkew~TNZ, data=df_big)
modelSummary = summary(lm_temp)
modelSummary
rm(list = ls(all=TRUE))
