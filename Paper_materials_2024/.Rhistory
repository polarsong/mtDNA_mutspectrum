names(new_mam) = c('species_name', 'gene_name', 'GhAhSkew', 'ThChSkew', 'Class')
names(new_bird) = c('species_name', 'gene_name', 'GhAhSkew', 'ThChSkew', 'Class')
new_big = rbind(new_mam, new_bird)
new_b_and_m = ggplot(new_big, aes(x = gene_name, y = GhAhSkew, fill = Class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Mitochondrial genes')+
ylab('GhAhSkew')+
xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5",'CYTB',"ND6","ND1","ND2"))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
legend.position = "none")
new_b_and_m_one = ggplot(new_big, aes(x = gene_name, y = ThChSkew, fill = Class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Mitochondrial genes')+
ylab('ThChSkew')+
xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5",'CYTB',"ND6","ND1","ND2"))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
legend.position = "none")
for_article = SynNuc[, c(1, 2, 73, 74, 75, 76)]
for_article$class = 'Mammalia'
new_bird1 = df_nd6[, c('species_name', 'gene_name', 'neutral_A','neutral_g', 'neutral_c', 'neutral_T')]
new_bird1$class = 'Aves'
new_bird1$species_name = gsub(' ', '_', new_bird1$species_name)
for_article$Gene[for_article$Gene == 'CytB'] = 'CYTB'
names(for_article) = c('species_name', 'gene_name', 'neutral_A', 'neutral_T', 'neutral_g', 'neutral_c', 'class')
new_big1 = rbind(for_article, new_bird1)
new_b_and_m1 = ggplot(new_big1, aes(x = gene_name, y = neutral_A, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Gene name')+
ylab('Neutral T')+
ylim(0, 200)+
xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5",'CYTB',"ND6","ND1","ND2"))+
theme(axis.title.x=element_blank(), axis.text.x=element_blank(),axis.ticks.x=element_blank(),
legend.position = "none")
new_b_and_m2 = ggplot(new_big1, aes(x = gene_name, y = neutral_g, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
ylab('Neutral C')+
xlab('Mitochondrial genes')+
ylim(0, 200)+
xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5",'CYTB',"ND6","ND1","ND2"))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
legend.position = "none")
new_b_and_m3 = ggplot(new_big1, aes(x = gene_name, y = neutral_c, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Gene name')+
ylab('Neutral G')+
ylim(0, 200)+
xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5",'CYTB',"ND6","ND1","ND2"))+
theme(axis.title.x=element_blank(), axis.text.x=element_blank(),axis.ticks.x=element_blank(),
legend.position = "none")
new_b_and_m4 = ggplot(new_big1, aes(x = gene_name, y = neutral_T, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Mitochondrial genes')+
ylab('Neutral A')+
ylim(0, 200)+
xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5",'CYTB',"ND6","ND1","ND2"))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
legend.position = "none")
mam_vs_aves_fr = ggarrange(new_b_and_m3, new_b_and_m1, new_b_and_m4, new_b_and_m2,
ncol = 2, nrow = 2)
mam_vs_aves_skew = ggarrange(new_b_and_m, new_b_and_m_one,
ncol = 2, nrow = 1)
mam_vs_aves_fr
mam_vs_aves_skew
names_v = unique(df_mtdna$species_name)
df_short = data.frame()
for (i in names_v)
{
df1 = df_mtdna[df_mtdna$species_name == i,]
a = sum(df1$ghahSkew)/12
b = sum(df1$chthSkew)/12
v = sum(df1$Mass)/12
ab = c(i, a, b, v)
df_short = rbind(df_short, ab)
}
names(df_short) = c('species_name', 'GhAhSkew', 'ThChSkew', 'Mass')
df_short$Mass = as.numeric(df_short$Mass)
df_short$GhAhSkew = as.numeric(df_short$GhAhSkew)
df_short$ThChSkew = as.numeric(df_short$ThChSkew)
df_short$log_mass = log10(df_short$Mass)
mass_skew = ggplot(df_short, aes(x = GhAhSkew, y = log_mass))+
geom_point()+
geom_smooth(method=lm)
mass_skew
mass_skew = ggplot(df_short, aes(x = log_mass, y = GhAhSkew))+
geom_point()+
geom_smooth(method=lm)+
xlab(Десятичный логарифм массы)+
mass_skew = ggplot(df_short, aes(x = log_mass, y = GhAhSkew))+
geom_point()+
geom_smooth(method=lm)+
xlab(Десятичный логарифм массы)
mass_skew = ggplot(df_short, aes(x = log_mass, y = GhAhSkew))+
geom_point()+
geom_smooth(method=lm)+
xlab('Десятичный логарифм массы')
mass_skew
mass_skew = ggplot(df_short, aes(x = log_mass, y = GhAhSkew))+
geom_point()+
geom_smooth(method=lm)+
xlab('Decimal logarithm of mass')
mass_skew
View(df_mtdna)
df_fly = read.csv('flying_birds.csv')
df_fly = df_fly[,c(2,3,4)]
View(df_fly)
names(df_fly) = c('species_name', 'flightless', 'diving')
df_fly_clean1 = df_fly[df_fly$flightless =='Flightless',]
View(df_fly_clean1)
df_fly_clean= df_fly[df_fly$flightless == 'Almost_flightless',]
View(df_fly_clean)
df_fly_clean = na.omit(df_fly_clean)
df_fly_clean1 = na.omit(df_fly_clean1)
df_dive = df_fly
df_fly = df_fly[df_fly$flightless != 'Flightless',]
df_fly = df_fly[df_fly$flightless != 'Almost_flightless',]
df_fly_clean$flightless = 'Tinamiformes'
df_fly_clean1$flightless = 'Tinamiformes'
View(df_fly_clean)
View(df_fly_clean1)
df_fly_big = rbind(df_fly, df_fly_clean, df_fly_clean1)
df_fly_final = merge(df_fly_big, df_short)
View(df_fly_final)
df_fly_final = df_fly_final[df_fly_final$flightless != 'Galliformes',]
fly_skew = ggplot(df_fly_final, aes(x = flightless, y = GhAhSkew))+
geom_point()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
xlab('Birds groups')+
xlim('0', 'Tinamiformes', 'Apterygiformes', 'Casuariiformes', 'Struthioniformes', 'Rheiformes', "Psittaciformes", "Columbiformes", "Eurypygiformes", "Gruiformes", "Sphenisciformes")
fly_skew
df_fly_final[df_fly_final$flightless == '0',]$flightless = 'Flying birds'
fly_skew = ggplot(df_fly_final, aes(x = flightless, y = GhAhSkew))+
geom_point()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
xlab('Birds groups')+
xlim('0', 'Tinamiformes', 'Apterygiformes', 'Casuariiformes', 'Struthioniformes', 'Rheiformes', "Psittaciformes", "Columbiformes", "Eurypygiformes", "Gruiformes", "Sphenisciformes")
fly_skew = ggplot(df_fly_final, aes(x = flightless, y = GhAhSkew))+
geom_point()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
xlab('Birds groups')+
xlim('Flying birds', 'Tinamiformes', 'Apterygiformes', 'Casuariiformes', 'Struthioniformes', 'Rheiformes', "Psittaciformes", "Columbiformes", "Eurypygiformes", "Gruiformes", "Sphenisciformes")
fly_skew
skew_eco = ggplot(data = df_mtdna, aes(x = realm, y = ghahSkew))+
geom_boxplot(outlier.shape = NA, notch = T)+
xlab('Birds realms')+
xlim(c('Antarctic', 'Nearctic', 'Palearctic', 'Indo_Malay', 'Afrotropic', 'Madagascar', 'Neotropic', 'Australian', 'Oceania'))+
theme(axis.title.x=element_blank(), axis.text.x=element_blank(),axis.ticks.x=element_blank(),
axis.title.y=element_blank(),axis.ticks.y=element_blank())
skew_eco
skew_eco = ggplot(data = df_mtdna, aes(x = realm, y = ghahSkew))+
geom_boxplot(outlier.shape = NA, notch = T)+
xlab('Birds realms')+
xlim(c('Antarctic', 'Nearctic', 'Palearctic', 'Indo_Malay', 'Afrotropic', 'Madagascar', 'Neotropic', 'Australian', 'Oceania'))
skew_eco
skew_eco = ggplot(data = df_mtdna, aes(x = realm, y = ghahSkew))+
geom_boxplot(outlier.shape = NA, notch = T)+
xlab('Birds realms')+
xlim(c('Antarctic', 'Nearctic', 'Palearctic', 'Indo_Malay', 'Afrotropic', 'Madagascar', 'Neotropic', 'Australian', 'Oceania'))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
skew_eco
ylab('GhAhSkew)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
skew_eco = ggplot(data = df_mtdna, aes(x = realm, y = ghahSkew))+
geom_boxplot(outlier.shape = NA, notch = T)+
xlab('Birds realms')+
skew_eco = ggplot(data = df_mtdna, aes(x = realm, y = ghahSkew))+
geom_boxplot(outlier.shape = NA, notch = T)+
xlab('Birds realms')+
ylab('GhAhSkew')+
xlim(c('Antarctic', 'Nearctic', 'Palearctic', 'Indo_Malay', 'Afrotropic', 'Madagascar', 'Neotropic', 'Australian', 'Oceania'))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
skew_eco = ggplot(data = df_mtdna, aes(x = realm, y = ghahSkew))+
geom_boxplot(outlier.shape = NA, notch = T)+
xlab('Birds realms')+
ylab('GhAhSkew')+
xlim(c('Antarctic', 'Nearctic', 'Palearctic', 'Indo_Malay', 'Afrotropic', 'Madagascar', 'Neotropic', 'Australian', 'Oceania'))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
```{r}
skew_eco
skew_niche = ggplot(data = df_mtdna, aes(x = Trophic_niche, y = ghahSkew))+
geom_boxplot(outlier.shape = NA, notch = T, fill = )+
xlab('Trophic niche')+
ylab('GhAhSkew')+
xlim(c('Herbivore aquatic', 'Scavenger', 'Vertivore', 'Granivore', 'Herbivore terrestrial', 'Invertivore', 'Aquatic predator', 'Nectarivore', 'Omnivore', 'Frugivore'))
skew_niche = ggplot(data = df_mtdna, aes(x = Trophic_niche, y = ghahSkew))+
geom_boxplot(outlier.shape = NA, notch = T)+
xlab('Trophic niche')+
ylab('GhAhSkew')+
xlim(c('Herbivore aquatic', 'Scavenger', 'Vertivore', 'Granivore', 'Herbivore terrestrial', 'Invertivore', 'Aquatic predator', 'Nectarivore', 'Omnivore', 'Frugivore'))
skew_niche
skew_niche = ggplot(data = df_mtdna, aes(x = Trophic_niche, y = ghahSkew))+
geom_boxplot(outlier.shape = NA, notch = T)+
xlab('Trophic niche')+
ylab('GhAhSkew')+
xlim(c('Herbivore aquatic', 'Scavenger', 'Vertivore', 'Granivore', 'Herbivore terrestrial', 'Invertivore', 'Aquatic predator', 'Nectarivore', 'Omnivore', 'Frugivore'))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
skew_niche
df_pca = df_mtdna[c('species_name','gene_name','fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew', 'med_T', 'med_G')]
df_pca = df_mtdna[c('species_name','gene_name','fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew')]
gene_vector = c('fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew')
gene_stats = data.frame(unique(df_pca$species_name))
for ( char in gene_vector){
stats1 = aggregate(df_pca[,char], by = list(df_pca$species_name), FUN = 'sum')[2]
stats1 = stats1/12
gene_stats = cbind(gene_stats, stats1)
}
names(gene_stats) = c('species_name', gene_vector)
df_realm = df_mtdna[c('species_name', 'realm', 'Trophic_niche')]
gene_stats = merge(gene_stats, df_realm, by = 'species_name')
gene_stats = unique(gene_stats)
row.names(gene_stats) = gene_stats$species_name
gene_stats = gene_stats[, colSums(is.na(gene_stats)) < nrow(gene_stats)]
View(gene_stats)
stats_pca = prcomp(gene_stats[c(2,3,4,5,6,7,8)], center = TRUE, scale. = TRUE)
summary(stats_pca)
bipl_com = ggbiplot(stats_pca)
bipl_com
birds_pca = data.frame(stats_pca$x)
birds_pca = birds_pca[,c(1,2)]
birds_pca$species_name = row.names(birds_pca)
gene_stats$species_name = row.names(gene_stats)
gene_stats = merge(gene_stats, birds_pca, by = 'species_name')
row.names(gene_stats) = gene_stats$species_name
gene_stats = gene_stats[,c(2:14)]
gene_stats = gene_stats[,c(2:12)]
b_bipl = ggbiplot(stats_pca, groups = gene_stats$Trophic_niche, labels = gene_stats$species_name,labels.size = 2)
b_bipl
b_bipl1 = ggbiplot(stats_pca, groups = gene_stats$realm, labels = gene_stats$species_name,labels.size = 2)
b_bipl1
bipl_com
library(ggfortify)
autoplot(stats_pca,
loadings = TRUE,
loadings.label = TRUE)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls(all=TRUE))
library(ggfortify)
library(ggplot2)
library(ggpubr)
library(ggbiplot)
birds_pca = data.frame(stats_pca$x)
birds_pca = birds_pca[,c(1,2)]
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls(all=TRUE))
library(ggfortify)
library(ggplot2)
library(ggpubr)
library(ggbiplot)
df_mtdna = read.csv('Birds_dataset_paper.csv')
head(df_mtdna)
df_nd6 = read.csv('Birds_mtDNA_data.csv')
df_nd6$GhAhSkew = (df_nd6$neutral_g - df_nd6$neutral_A)/(df_nd6$neutral_g + df_nd6$neutral_A)
df_nd6$ThChSkew = (df_nd6$neutral_T - df_nd6$neutral_c)/(df_nd6$neutral_T + df_nd6$neutral_c)
df_nd6$fTn = df_nd6$neutral_T/df_nd6$neutral_amount
df_nd6$fAn = df_nd6$neutral_A/df_nd6$neutral_amount
df_nd6$fCn = df_nd6$neutral_c/df_nd6$neutral_amount
df_nd6$fGn = df_nd6$neutral_g/df_nd6$neutral_amount
df_nd6$GhAhSkew = (df_nd6$neutral_c- df_nd6$neutral_T)/(df_nd6$neutral_c + df_nd6$neutral_T)
df_nd6$ThChSkew = (df_nd6$neutral_A - df_nd6$neutral_g)/(df_nd6$neutral_A + df_nd6$neutral_g)
df_nd6$fTn = df_nd6$neutral_A/df_nd6$neutral_amount
df_nd6$fAn = df_nd6$neutral_T/df_nd6$neutral_amount
df_nd6$fCn = df_nd6$neutral_g/df_nd6$neutral_amount
df_nd6$fGn = df_nd6$neutral_c/df_nd6$neutral_amount
graph1 = ggplot(data = df_nd6, aes(x = gene_name, y = fTn))+
geom_boxplot(notch = TRUE)+
xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))+
ylim(0, 0.8)+
annotate("text", x=11, y=0.78, label= "A")+
xlab('Mitochondrial genes')+
ylab('Thymine frequency')+
theme(axis.title.x=element_blank(), axis.text.x=element_blank(),axis.ticks.x=element_blank())
graph2 = ggplot(data = df_nd6, aes(x = gene_name, y = fCn))+
geom_boxplot(notch = TRUE)+
xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))+
ylim(0, 0.8)+
annotate("text", x=11, y=0.78, label= "C")+
xlab('Mitochondrial genes')+
ylab('Cytosine frequency')+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
graph3 = ggplot(data = df_nd6, aes(x = gene_name, y = fAn))+
geom_boxplot(notch = TRUE)+
xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))+
ylim(0, 0.8)+
annotate("text", x=11, y=0.78, label= "D")+
xlab('Mitochondrial genes')+
ylab('Adenine frequency')+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
graph4 = ggplot(data = df_nd6, aes(x = gene_name, y = fGn))+
geom_boxplot(notch = TRUE)+
xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))+
ylim(0, 0.8)+
annotate("text", x=11, y=0.78, label= "B")+
xlab('Mitochondrial genes')+
ylab('Guanine frequency')+
theme(axis.title.x=element_blank(), axis.text.x=element_blank(),axis.ticks.x=element_blank())
freq_graph= ggarrange(graph1, graph4, graph2, graph3,
ncol = 2, nrow = 2)
freq_graph
graph1 = ggplot(data = df_nd6, aes(x = gene_name, y = GhAhSkew))+
geom_boxplot(notch = TRUE)+
xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))+
ylim(-1,1)+
xlab('Mitochondrial genes')+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
graph2 = ggplot(data = df_nd6, aes(x = gene_name, y = ThChSkew))+
geom_boxplot(notch = TRUE)+
xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5","CYTB","ND6","ND1","ND2"))+
ylim(-1,1)+
xlab('Mitochondrial genes')+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
skew_graph= ggarrange(graph1, graph2,
ncol = 2, nrow = 1)
skew_graph
unzip("../Body/3Results/AllGenesCodonUsageNoOverlap.txt.zip", exdir = "../../Body/3Results/")
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep = '\t')
if (file.exists("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")) file.remove("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")
SynNuc$ghahSkew = ((SynNuc$NeutralC - SynNuc$NeutralT))/((SynNuc$NeutralC + SynNuc$NeutralT))
SynNuc$chthSkew = ((SynNuc$NeutralA - SynNuc$NeutralG))/((SynNuc$NeutralA + SynNuc$NeutralG))
new_mam = SynNuc[, c(1, 2, 79, 80)]
new_mam$Сlass = 'Mammalia'
new_bird = df_nd6[, c('species_name', 'gene_name', 'GhAhSkew','ThChSkew')]
new_bird$Сlass = 'Aves'
new_bird$species_name = gsub(' ', '_', new_bird$species_name)
new_mam$Gene[new_mam$Gene == 'CytB'] = 'CYTB'
names(new_mam) = c('species_name', 'gene_name', 'GhAhSkew', 'ThChSkew', 'Class')
names(new_bird) = c('species_name', 'gene_name', 'GhAhSkew', 'ThChSkew', 'Class')
new_big = rbind(new_mam, new_bird)
new_b_and_m = ggplot(new_big, aes(x = gene_name, y = GhAhSkew, fill = Class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Mitochondrial genes')+
ylab('GhAhSkew')+
xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5",'CYTB',"ND6","ND1","ND2"))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
legend.position = "none")
new_b_and_m_one = ggplot(new_big, aes(x = gene_name, y = ThChSkew, fill = Class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Mitochondrial genes')+
ylab('ThChSkew')+
xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5",'CYTB',"ND6","ND1","ND2"))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
legend.position = "none")
for_article = SynNuc[, c(1, 2, 73, 74, 75, 76)]
for_article$class = 'Mammalia'
new_bird1 = df_nd6[, c('species_name', 'gene_name', 'neutral_A','neutral_g', 'neutral_c', 'neutral_T')]
new_bird1$class = 'Aves'
new_bird1$species_name = gsub(' ', '_', new_bird1$species_name)
for_article$Gene[for_article$Gene == 'CytB'] = 'CYTB'
names(for_article) = c('species_name', 'gene_name', 'neutral_A', 'neutral_T', 'neutral_g', 'neutral_c', 'class')
new_big1 = rbind(for_article, new_bird1)
new_b_and_m1 = ggplot(new_big1, aes(x = gene_name, y = neutral_A, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Gene name')+
ylab('Neutral T')+
ylim(0, 200)+
xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5",'CYTB',"ND6","ND1","ND2"))+
theme(axis.title.x=element_blank(), axis.text.x=element_blank(),axis.ticks.x=element_blank(),
legend.position = "none")
new_b_and_m2 = ggplot(new_big1, aes(x = gene_name, y = neutral_g, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
ylab('Neutral C')+
xlab('Mitochondrial genes')+
ylim(0, 200)+
xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5",'CYTB',"ND6","ND1","ND2"))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
legend.position = "none")
new_b_and_m3 = ggplot(new_big1, aes(x = gene_name, y = neutral_c, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Gene name')+
ylab('Neutral G')+
ylim(0, 200)+
xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5",'CYTB',"ND6","ND1","ND2"))+
theme(axis.title.x=element_blank(), axis.text.x=element_blank(),axis.ticks.x=element_blank(),
legend.position = "none")
new_b_and_m4 = ggplot(new_big1, aes(x = gene_name, y = neutral_T, fill = class))+
geom_boxplot(notch = TRUE, outlier.alpha = FALSE)+
xlab('Mitochondrial genes')+
ylab('Neutral A')+
ylim(0, 200)+
xlim(c("COX1","COX2","ATP8","ATP6","COX3", "ND3", "ND4L","ND4","ND5",'CYTB',"ND6","ND1","ND2"))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
legend.position = "none")
mam_vs_aves_fr = ggarrange(new_b_and_m3, new_b_and_m1, new_b_and_m4, new_b_and_m2,
ncol = 2, nrow = 2)
mam_vs_aves_skew = ggarrange(new_b_and_m, new_b_and_m_one,
ncol = 2, nrow = 1)
mam_vs_aves_fr
mam_vs_aves_skew
names_v = unique(df_mtdna$species_name)
df_short = data.frame()
for (i in names_v)
{
df1 = df_mtdna[df_mtdna$species_name == i,]
a = sum(df1$ghahSkew)/12
b = sum(df1$chthSkew)/12
v = sum(df1$Mass)/12
ab = c(i, a, b, v)
df_short = rbind(df_short, ab)
}
names(df_short) = c('species_name', 'GhAhSkew', 'ThChSkew', 'Mass')
df_short$Mass = as.numeric(df_short$Mass)
df_short$GhAhSkew = as.numeric(df_short$GhAhSkew)
df_short$ThChSkew = as.numeric(df_short$ThChSkew)
df_short$log_mass = log10(df_short$Mass)
mass_skew = ggplot(df_short, aes(x = log_mass, y = GhAhSkew))+
geom_point()+
geom_smooth(method=lm)+
xlab('Decimal logarithm of mass')
mass_skew
df_fly = read.csv('flying_birds.csv')
df_fly = df_fly[,c(2,3,4)]
names(df_fly) = c('species_name', 'flightless', 'diving')
df_fly_clean1 = df_fly[df_fly$flightless =='Flightless',]
df_fly_clean= df_fly[df_fly$flightless == 'Almost_flightless',]
df_fly_clean = na.omit(df_fly_clean)
df_fly_clean1 = na.omit(df_fly_clean1)
df_dive = df_fly
df_fly = df_fly[df_fly$flightless != 'Flightless',]
df_fly = df_fly[df_fly$flightless != 'Almost_flightless',]
df_fly_clean$flightless = 'Tinamiformes'
df_fly_clean1$flightless = 'Tinamiformes'
df_fly_big = rbind(df_fly, df_fly_clean, df_fly_clean1)
df_fly_final = merge(df_fly_big, df_short)
df_fly_final = df_fly_final[df_fly_final$flightless != 'Galliformes',]
df_fly_final[df_fly_final$flightless == '0',]$flightless = 'Flying birds'
fly_skew = ggplot(df_fly_final, aes(x = flightless, y = GhAhSkew))+
geom_point()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
xlab('Birds groups')+
xlim('Flying birds', 'Tinamiformes', 'Apterygiformes', 'Casuariiformes', 'Struthioniformes', 'Rheiformes', "Psittaciformes", "Columbiformes", "Eurypygiformes", "Gruiformes", "Sphenisciformes")
fly_skew
skew_eco = ggplot(data = df_mtdna, aes(x = realm, y = ghahSkew))+
geom_boxplot(outlier.shape = NA, notch = T)+
xlab('Birds realms')+
ylab('GhAhSkew')+
xlim(c('Antarctic', 'Nearctic', 'Palearctic', 'Indo_Malay', 'Afrotropic', 'Madagascar', 'Neotropic', 'Australian', 'Oceania'))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
skew_eco
skew_niche = ggplot(data = df_mtdna, aes(x = Trophic_niche, y = ghahSkew))+
geom_boxplot(outlier.shape = NA, notch = T)+
xlab('Trophic niche')+
ylab('GhAhSkew')+
xlim(c('Herbivore aquatic', 'Scavenger', 'Vertivore', 'Granivore', 'Herbivore terrestrial', 'Invertivore', 'Aquatic predator', 'Nectarivore', 'Omnivore', 'Frugivore'))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
skew_niche
df_pca = df_mtdna[c('species_name','gene_name','fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew')]
gene_vector = c('fAn', 'fGn', 'fCn', 'fTn', 'Stg_Sac','ghahSkew', 'chthSkew')
gene_stats = data.frame(unique(df_pca$species_name))
for ( char in gene_vector){
stats1 = aggregate(df_pca[,char], by = list(df_pca$species_name), FUN = 'sum')[2]
stats1 = stats1/12
gene_stats = cbind(gene_stats, stats1)
}
names(gene_stats) = c('species_name', gene_vector)
df_realm = df_mtdna[c('species_name', 'realm', 'Trophic_niche')]
gene_stats = merge(gene_stats, df_realm, by = 'species_name')
gene_stats = unique(gene_stats)
row.names(gene_stats) = gene_stats$species_name
gene_stats = gene_stats[, colSums(is.na(gene_stats)) < nrow(gene_stats)]
stats_pca = prcomp(gene_stats[c(2,3,4,5,6,7,8)], center = TRUE, scale. = TRUE)
summary(stats_pca)
autoplot(stats_pca,
loadings = TRUE,
loadings.label = TRUE)
birds_pca = data.frame(stats_pca$x)
birds_pca = birds_pca[,c(1,2)]
birds_pca$species_name = row.names(birds_pca)
gene_stats$species_name = row.names(gene_stats)
gene_stats = merge(gene_stats, birds_pca, by = 'species_name')
row.names(gene_stats) = gene_stats$species_name
gene_stats = gene_stats[,c(2:14)]
gene_stats = gene_stats[,c(2:12)]
PCA_mtDNA_metrics = autoplot(stats_pca,
loadings = TRUE,
loadings.label = TRUE)
Density_PC1_eco = ggplot(gene_stats, aes(x=PC1, color=realm)) +
geom_density(linewidth = 1)+
theme_bw()+
theme(axis.title = element_text(size = 29), axis.text = element_text(size = 25))+
xlab('PC1 (48.0%)')+
scale_colour_manual(name="Origin", values= c("black", "red", "black", "black", "black", "black", "black", "black", "black"))+
theme(legend.position="none")
Density_PC1_niche = ggplot(gene_stats, aes(x=PC1, color=Trophic_niche)) +
geom_density(linewidth = 1)+
theme_bw()+
theme(axis.title = element_text(size = 29), axis.text = element_text(size = 25))+
xlab('PC1 (48.0%)')+
scale_colour_manual(name="Origin", values= c("black", "black", "black", "red", "black", "black", "black", "black", "black", 'black'))+
theme(legend.position="none")
PCA_mtDNA_metrics
Density_PC1_eco
Density_PC1_niche
df_dive_final = merge(df_dive, df_short, by = 'species_name')
df_dive_final = df_dive_final[df_dive_final$diving != 'waterbird',]
ggplot(df_dive_final, aes(x = diving, y = GhAhSkew))+
geom_boxplot(outlier.shape = NA)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(df_dive_final, aes(x = diving, y = GhAhSkew))+
geom_point()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
xlab('Birds groups')+
xlim('0', "Anseriformes", "Sphenisciformes", "Podicipediformes", "Gaviiformes", "Suliformes", "Coraciiformes", "Passeriformes", "Gruiformes", "Charadriiformes", "Procellariiformes")
df_dive_final[df_dive_final$diving == '0',]$diving = 'Non-diving birds'
ggplot(df_dive_final, aes(x = diving, y = GhAhSkew))+
geom_point()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
xlab('Birds groups')+
xlim('Non-diving birds', "Anseriformes", "Sphenisciformes", "Podicipediformes", "Gaviiformes", "Suliformes", "Coraciiformes", "Passeriformes", "Gruiformes", "Charadriiformes", "Procellariiformes")
diving_skew = ggplot(df_dive_final, aes(x = diving, y = GhAhSkew))+
geom_point()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
xlab('Birds groups')+
xlim('Non-diving birds', "Anseriformes", "Sphenisciformes", "Podicipediformes", "Gaviiformes", "Suliformes", "Coraciiformes", "Passeriformes", "Gruiformes", "Charadriiformes", "Procellariiformes")
rm(list = ls(all=TRUE))
