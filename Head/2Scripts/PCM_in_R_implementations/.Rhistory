dive_tree = read.tree('diving_birds_tree.tre')
row.names(df_dive) = df_dive$species_name
df_dive_mass = merge(df_dive, df_temp_fly)
df_dive_mass$Mass = as.numeric(df_dive_mass$Mass)
df_dive_mass$logMass = log10(df_dive_mass$Mass)
ggplot(df_dive_mass, aes(x = logMass, y = GhAhSkew, color = ability_to_dive))+
geom_point()
unique(df_dive_mass$ability_to_dive)
df_dive_mass1 = df_dive_mass[df_dive_mass$ability_to_fly == "Charadriiformes",]
ggplot(df_fdive_mass, aes(x = logMass, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)
df_dive_mass1 = df_dive_mass[df_dive_mass$ability_to_fly == "Charadriiformes",]
ggplot(df_dive_mass1, aes(x = logMass, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)
df_dive_mass1 = df_dive_mass[df_dive_mass$ability_to_dive == "Charadriiformes",]
ggplot(df_dive_mass1, aes(x = logMass, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)
df_dive_mass2 = df_dive_mass[df_dive_mass$ability_to_dive == "Anseriformes",]
ggplot(df_dive_mass2, aes(x = logMass, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)
df_dive_mass3 = df_dive_mass[df_dive_mass$ability_to_dive == "Coraciiformes",]
ggplot(df_dive_mass3, aes(x = logMass, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)
df_dive_mass4 = df_dive_mass[df_dive_mass$ability_to_dive == "Suliformes",]
ggplot(df_dive_mass4, aes(x = logMass, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)
df_dive_mass5 = df_dive_mass[df_dive_mass$ability_to_dive == "Sphenisciformes",]
ggplot(df_dive_mass5, aes(x = logMass, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)
df_dive_mass6 = df_dive_mass[df_dive_mass$ability_to_dive == "Passeriformes",]
ggplot(df_dive_mass6, aes(x = logMass, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)
df_dive_mass7 = df_dive_mass[df_dive_mass$ability_to_dive == "Procellariiformes",]
ggplot(df_dive_mass7, aes(x = logMass, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)
df_dive_mass8 = df_dive_mass[df_dive_mass$ability_to_dive == "Gruiformes",]
ggplot(df_dive_mass8, aes(x = logMass, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)
df_dive_mass7 = df_dive_mass[df_dive_mass$ability_to_dive == "Procellariiformes",]
ggplot(df_dive_mass7, aes(x = logMass, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)
df_dive_mass8 = df_dive_mass[df_dive_mass$ability_to_dive == "Gruiformes",]
ggplot(df_dive_mass8, aes(x = logMass, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)
df_dive_mass9 = df_dive_mass[df_dive_mass$ability_to_dive == "Gaviiformes",]
ggplot(df_dive_mass9, aes(x = logMass, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)
df_dive_mass10 = df_dive_mass[df_dive_mass$ability_to_dive == "Podicipediformes",]
ggplot(df_dive_mass10, aes(x = logMass, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)
#new PGLS for birds
rm(list = ls(all=TRUE))
df_mtdna = read.csv('Birds_dataset_paper.csv')
View(df_mtdna)
rm(list=ls(all=T))
rm(list=ls(all=T))
library(ggtree)
library(ggplot2)
library(treeio)
library(dplyr)
library(ape)
library(geiger)
df_mtdna = read.csv('Birds_dataset_paper.csv')
View(df_mtdna)
a = sub('formes.*', '', df_mtdna$taxonomy)
a
b = sub(".* ", "", a)
df_mtdna1 = df_mtdna
df_mtdna1$taxonomy = sub('formes.*', '', df_mtdna1$taxonomy)
View(df_mtdna1)
df_mtdna1$taxonomy = sub(".* ", "", a)
df_mtdna1$taxonomy = paste(df_mtdna1$taxonomy, 'formes')
df_mtdna1 = df_mtdna
df_mtdna1$taxonomy = sub('formes.*', '', df_mtdna1$taxonomy)
df_mtdna1$taxonomy = sub(".* ", "", a)
df_mtdna1$taxonomy = paste(df_mtdna1$taxonomy, 'formes', sep = '')
df_tax = df_mtdna1[,c(2,5)]
df_tax = unique(df_mtdna1[,c(2,5)])
df_flight = read.csv('flight_and_gene.csv')
View(df_flight)
df_temp_fly = read.csv('birds_metrics.csv')
View(df_temp_fly)
colnames(df_mtdna)
rm(list=ls(all=T))
df_mtdna = read.csv('Birds_dataset_paper.csv')
df_mtdna1 = df_mtdna
df_mtdna1$taxonomy = sub('formes.*', '', df_mtdna1$taxonomy)
df_mtdna1$taxonomy = sub(".* ", "", a)
df_mtdna1$taxonomy = paste(df_mtdna1$taxonomy, 'formes', sep = '')
df_tax = unique(df_mtdna1[,c(2,5)])
View(df_tax)
rm(list=ls(all=T))
df_mtdna = read.csv('Birds_dataset_paper.csv')
df_mtdna1 = df_mtdna
df_mtdna1$taxonomy = sub('formes.*', '', df_mtdna1$taxonomy)
df_mtdna1$taxonomy = sub(".* ", "", df_mtdna1$taxonomy)
df_mtdna1$taxonomy = paste(df_mtdna1$taxonomy, 'formes', sep = '')
df_tax = unique(df_mtdna1[,c(2,5)])
View(df_tax)
df_need = data.frame()
for (i in unique(df_mtdna$species_name))
{
a = df_mtdna[df_mtdna$species_name == i,]
b = sum(a$ghahSkew)/12
ab = c(i,b)
df_need = rbind(df_need, ab)
}
View(df_need)
names(df_need) = c('species_name', 'GhAhSkew')
df_tax = unique(df_mtdna1[,c(2,5, 'Mass')])
df_tax = unique(df_mtdna1[,c(2,5,117)])
View(df_tax)
rm(list=ls(all=T))
df_mtdna = read.csv('Birds_dataset_paper.csv')
df_mtdna1 = df_mtdna
df_mtdna1$taxonomy = sub('formes.*', '', df_mtdna1$taxonomy)
df_mtdna1$taxonomy = sub(".* ", "", df_mtdna1$taxonomy)
df_mtdna1$taxonomy = paste(df_mtdna1$taxonomy, 'formes', sep = '')
df_tax = unique(df_mtdna1[,c(2,5,117)])
View(df_tax)
df_tax$logMass = log10(df_tax$Mass)
df_need = data.frame()
for (i in unique(df_mtdna$species_name))
{
a = df_mtdna[df_mtdna$species_name == i,]
b = sum(a$ghahSkew)/12
ab = c(i,b)
df_need = rbind(df_need, ab)
}
names(df_need) = c('species_name', 'GhAhSkew')
df_tax = merge(df_tax, df_need)
View(df_tax)
ggplot(df_tax, aes(x = logMass,y = GhAhSkew))+
geom_point()
df_tax$GhAhSkew = as.numeric(df_tax$GhAhSkew)
ggplot(df_tax, aes(x = logMass,y = GhAhSkew))+
geom_point()
ggplot(df_tax, aes(x = logMass,y = GhAhSkew, color = taxonomy))+
geom_point()
ggplot(df_tax, aes(x = logMass,y = GhAhSkew))+
geom_point()
ggplot(df_tax, aes(x = logMass,y = GhAhSkew))+
geom_point()+
labs('AAA')
ggplot(df_tax, aes(x = logMass,y = GhAhSkew))+
geom_point()+
labs('AAA')
ggplot(df_tax, aes(x = logMass,y = GhAhSkew))+
geom_point()+
labs('AAA')
ggplot(df_tax, aes(x = logMass,y = GhAhSkew))+
geom_point()+
ggtitle('AAA')
ggplot(df_tax, aes(x = logMass,y = GhAhSkew))+
geom_point()+
ggtitle('AAAaaaaaaaaaaaa')
for (i in unique(df_tax$taxonomy))
{
a = df_tax[df_tax$taxonomy == i,]
b = ggplot(a, aes(x = logMass, y = GhAhSkew))+
geom_point()+
ggtitle(i)
assign(paste0("Order_", i), b)
counter = counter + 1
}
counter = 0
for (i in unique(df_tax$taxonomy))
{
a = df_tax[df_tax$taxonomy == i,]
b = ggplot(a, aes(x = logMass, y = GhAhSkew))+
geom_point()+
ggtitle(i)
assign(paste0("Order_", i), b)
counter = counter + 1
}
Order_Apodiformes
rm(list=ls(all=T))
df_mtdna = read.csv('Birds_dataset_paper.csv')
df_mtdna1 = df_mtdna
df_mtdna1$taxonomy = sub('formes.*', '', df_mtdna1$taxonomy)
df_mtdna1$taxonomy = sub(".* ", "", df_mtdna1$taxonomy)
df_mtdna1$taxonomy = paste(df_mtdna1$taxonomy, 'formes', sep = '')
df_tax = unique(df_mtdna1[,c(2,5,117)])
df_tax$logMass = log10(df_tax$Mass)
df_need = data.frame()
for (i in unique(df_mtdna$species_name))
{
a = df_mtdna[df_mtdna$species_name == i,]
b = sum(a$ghahSkew)/12
ab = c(i,b)
df_need = rbind(df_need, ab)
}
names(df_need) = c('species_name', 'GhAhSkew')
df_tax = merge(df_tax, df_need)
df_tax$GhAhSkew = as.numeric(df_tax$GhAhSkew)
counter = 0
for (i in unique(df_tax$taxonomy))
{
a = df_tax[df_tax$taxonomy == i,]
b = ggplot(a, aes(x = logMass, y = GhAhSkew))+
geom_point()+
ggtitle(i)+
geom_smooth(method = 'lm', formula = y~x)
assign(paste0("Order_", i), b)
counter = counter + 1
}
Order_Apodiformes
library(ggpubr)
ggarrange(Order_Accipitriformes, Order_Anseriformes, Order_Apodiformes, Order_Apterygiformes, Order_Bucerotiformes, Order_Caprimulgiformes, Order_Casuariiformes, Order_Charadriiformes, Order_Ciconiiformes, Order_Coliiformes, Order_Columbiformes, Order_Coraciiformes, Order_Cuculiformes, Order_Falconiformes, Order_Galbuliformes, Order_Galliformes, Order_Gaviiformes, Order_Gruiformes, Order_Musophagiformes, Order_Passeriformes, Order_Pelecaniformes, Order_Phoenicopteriformes, Order_Piciformes, Order_Podicipediformes, Order_Procellariiformes, Order_Psittaciformes, Order_Rheiformes, Order_Sphenisciformes, Order_Strigiformes, Order_Struthioniformes, Order_Tinamiformes, Order_Trogoniformes, Order_Upupiformes,
ncol = 3, nrow = 11)
rm(list=ls(all=T))
library(phytools)
library(nlme)
library(geiger)
library(ggplot2)
#flying birds
df_flight = read.csv('flight_and_gene.csv')
df_flight = df_flight[,c(2,3,4,5,6)]
df_flight$flight_num = 0
df_flight[df_flight$ability_to_fly != 'Flying',]$flight_num = 1
rownames(df_flight) = df_flight$species_name
flying_tree = read.tree('flying_birds_tree.tre')
name.check(flying_tree, df_flight)
df_flight$ability_to_fly = as.character(df_flight$ability_to_fly)
df_flight$GhAhSkew = as.numeric(as.character(df_flight$GhAhSkew))
df_flight$fAn = as.numeric(as.character(df_flight$fAn))
df_flight$fGn = as.numeric(as.character(df_flight$fGn))
df_flight$flight_num = as.numeric(as.character(df_flight$flight_num))
df_fly_peng = df_flight[df_flight$ability_to_fly == 'Flying' | df_flight$ability_to_fly =='Sphenisciformes',]
df_fly_not = df_flight[df_flight$ability_to_fly !='Sphenisciformes',]
peng_fly_tree = read.tree('flying_and_peng.tre')
no_peng_fly_tree = read.tree('flying_and_no_peng.tre')
spp = rownames(df_fly_peng)
corBM = corBrownian(phy=peng_fly_tree,form=~spp)
pgls_flying = gls(GhAhSkew~ability_to_fly,
data=df_fly_peng,correlation=corBM)
summary(pgls_flying)
corLambda<-corPagel(value=1,phy=peng_fly_tree,form=~spp)
pgls_flying = gls(GhAhSkew~ability_to_fly,
data=df_fly_peng,correlation=corLambda)
summary(pgls_flying)
df_temp_fly = read.csv('birds_metrics.csv')
df_temp_fly = df_temp_fly[,c(2:17)]
df_peng_mass = merge(df_fly_peng, df_temp_fly)
df_peng_mass$Mass = as.numeric(df_peng_mass$Mass)
df_peng_mass$logMass = log10(df_peng_mass$Mass)
df_peng_mass$ability_to_fly_binar = 0
df_peng_mass[df_peng_mass$ability_to_fly == 'Sphenisciformes',]$ability_to_fly_binar = 1
df_fly_not[df_fly_not$ability_to_fly != 'Flying',]$ability_to_fly = 'Non-flying'
spp = rownames(df_fly_not)
corBM = corBrownian(phy=no_peng_fly_tree,form=~spp)
pgls_flying = gls(GhAhSkew~ability_to_fly,
data=df_fly_not,correlation=corBM)
summary(pgls_flying)
df_fly_not[df_fly_not$ability_to_fly != 'Flying',]$ability_to_fly = 'Non-flying'
spp = rownames(df_fly_not)
corBM = corBrownian(phy=no_peng_fly_tree,form=~spp)
pgls_flying = gls(GhAhSkew~ability_to_fly,
data=df_fly_not,correlation=corBM)
summary(pgls_flying)
corLambda<-corPagel(value=1,phy=no_peng_fly_tree,form=~spp)
pgls_flying = gls(GhAhSkew~ability_to_fly,
data=df_fly_not,correlation=corLambda)
control <- glsControl(maxIter = 500, msMaxIter=2000, returnObject = TRUE)
pgls_flying = gls(GhAhSkew~ability_to_fly,
data=df_fly_not,correlation=corLambda, control = control)
control <- glsControl(maxIter = 1000, msMaxIter=4000, returnObject = TRUE)
pgls_flying = gls(GhAhSkew~ability_to_fly,
data=df_fly_not,correlation=corLambda, control = control)
corLambda<-corPagel(phy=no_peng_fly_tree,form=~spp)
corLambda<-corPagel(value = 0, phy=no_peng_fly_tree,form=~spp)
control <- glsControl(maxIter = 1000, msMaxIter=4000, returnObject = TRUE)
pgls_flying = gls(GhAhSkew~ability_to_fly,
data=df_fly_not,correlation=corLambda, control = control)
summary(pgls_flying)
View(no_peng_fly_tree)
View(flying_tree)
#mutspec PGLS
df_mutspec = read.table('C:/Users/User/Desktop/mutspec12.tsv', header = TRUE, fill = TRUE)
df_ff = df_mutspec[df_mutspec$Label == 'ff',]
df_syn = df_mutspec[df_mutspec$Label == 'syn',]
df_ff = df_ff[!grepl('Node', df_ff$AltNode),]
df_ff = df_ff[,c(1,5,7)]
df_ff1 = reshape(data = df_ff, idvar = 'AltNode',
timevar = 'Mut',
direction = 'wide')
names(df_ff1) = c('species_name', 'Mutation_TG', 'Mutation_TC', 'Mutation_TA', 'Mutation_GT', 'Mutation_GC',
'Mutation_GA', 'Mutation_CT', 'Mutation_CG', 'Mutation_CA', 'Mutation_AT', 'Mutation_AG', 'Mutation_AC')
df_syn = df_syn[!grepl('Node', df_syn$AltNode),]
df_syn = df_syn[,c(1,5,7)]
df_syn1 = reshape(data = df_syn, idvar = 'AltNode',
timevar = 'Mut',
direction = 'wide')
names(df_syn1) = c('species_name', 'Mutation_TG_syn', 'Mutation_TC_syn', 'Mutation_TA_syn', 'Mutation_GT_syn', 'Mutation_GC_syn',
'Mutation_GA_syn', 'Mutation_CT_syn', 'Mutation_CG_syn', 'Mutation_CA_syn', 'Mutation_AT_syn', 'Mutation_AG_syn', 'Mutation_AC_syn')
df_fly_peng1 = merge(df_fly_peng, df_ff1)
df_fly_peng1 = merge(df_fly_peng1, df_syn1)
need_species = setdiff(df_fly_peng$species_name, df_fly_peng1$species_name)
correct_need_species = setdiff(df_fly_peng$species_name, need_species)
peng_fly_tree1<-keep.tip(peng_fly_tree,correct_need_species)
df_fly_peng1$Mutation_AG = as.numeric(df_fly_peng1$Mutation_AG)
df_fly_peng1$Mutation_AG_syn = as.numeric(df_fly_peng1$Mutation_AG_syn)
df_fly_peng1$Mutation_CT = as.numeric(df_fly_peng1$Mutation_CT)
df_fly_peng1$Mutation_CT_syn = as.numeric(df_fly_peng1$Mutation_CT_syn)
df_fly_peng1$ability_to_fly_binar = 0
df_fly_peng1[df_fly_peng1$ability_to_fly == 'Sphenisciformes',]$ability_to_fly_binar = 1
df_fly_peng1$ability_to_fly_binar_extra = 1
df_fly_peng1[df_fly_peng1$ability_to_fly == 'Sphenisciformes',]$ability_to_fly_binar_extra = 0
row.names(df_fly_peng1) = df_fly_peng1$species_name
spp1 = rownames(df_fly_peng1)
corBM1 = corBrownian(phy=peng_fly_tree1,form=~spp1)
pgls_mt_peng = gls(GhAhSkew~ability_to_fly_binar_extra,
data=df_fly_peng1,correlation=corBM1)
summary(pgls_mt_peng)
corLambda1<-corPagel(value = 0, phy=peng_fly_tree1,form=~spp1)
control <- glsControl(maxIter = 1000, msMaxIter=4000, returnObject = TRUE)
pgls_mt_peng1 = gls(GhAhSkew~ability_to_fly,
data=df_fly_peng1,correlation=corLambda1, control = control)
summary(pgls_flying)
summary(pgls_mt_peng1)
View(df_fly_peng1)
pgls_mt_peng1 = gls(GhAhSkew~ability_to_fly_binar,
data=df_fly_peng1,correlation=corLambda1, control = control)
summary(pgls_mt_peng1)
pgls_mt_peng1 = gls(Mutation_AG_syn~ability_to_fly_binar,
data=df_fly_peng1,correlation=corLambda1, control = control)
summary(pgls_mt_peng1)
df_fly_not1 = merge(df_fly_not, df_ff1)
df_fly_not1 = merge(df_fly_not1, df_syn1)
need_species = setdiff(df_fly_not$species_name, df_fly_not1$species_name)
correct_need_species = setdiff(df_fly_not$species_name, need_species)
not_fly_tree = read.tree('flying_and_no_peng.tre')
not_fly_tree1<-keep.tip(not_fly_tree,correct_need_species)
df_fly_not1$Mutation_AG = as.numeric(df_fly_not1$Mutation_AG)
df_fly_not1$Mutation_AG_syn = as.numeric(df_fly_not1$Mutation_AG_syn)
df_fly_not1$Mutation_CT = as.numeric(df_fly_not1$Mutation_CT)
df_fly_not1$Mutation_CT_syn = as.numeric(df_fly_not1$Mutation_CT_syn)
df_fly_not2 = df_fly_not1
df_fly_not2[df_fly_not2$ability_to_fly != 'Flying',]$ability_to_fly = 'Non-flying'
df_fly_not1$ability_to_fly_binar = 0
df_fly_not1[df_fly_not1$ability_to_fly != 'Flying',]$ability_to_fly_binar = 1
df_fly_not1$ability_to_fly_binar_extra = 1
df_fly_not1[df_fly_not1$ability_to_fly != 'Flying',]$ability_to_fly_binar_extra = 0
row.names(df_fly_not1) = df_fly_not1$species_name
spp2 = rownames(df_fly_not1)
corBM2 = corBrownian(phy=not_fly_tree1,form=~spp2)
pgls_mt_not_fly = gls(GhAhSkew~ability_to_fly_binar_extra,
data=df_fly_not1,correlation=corBM2)
summary(pgls_mt_not_fly)
corLambda2<-corPagel(value = 0, phy=not_fly_tree1,form=~spp2)
control <- glsControl(maxIter = 1000, msMaxIter=4000, returnObject = TRUE)
View(df_fly_not1)
pgls_mt_not_fly1 = gls(GhAhSkew~ability_to_fly_binar,
data=ddf_fly_not1,correlation=corLambda2, control = control)
pgls_mt_not_fly1 = gls(GhAhSkew~ability_to_fly_binar,
data=df_fly_not1,correlation=corLambda2, control = control)
summary(pgls_mt_not_fly1)
pgls_mt_not_fly1 = gls(Mutation_AG_syn~ability_to_fly_binar,
data=df_fly_not1,correlation=corLambda2, control = control)
summary(pgls_mt_not_fly1)
summary(pgls_mt_not_fly)
pgls_mt_not_fly = gls(Mutation_AG_syn~ability_to_fly_binar_extra,
data=df_fly_not1,correlation=corBM2)
summary(pgls_mt_not_fly)
pgls_mt_not_fly1 = gls(Mutation_AG_syn~ability_to_fly_binar,
data=df_fly_not1,correlation=corLambda2, control = control)
summary(pgls_mt_not_fly1)
summary(pgls_mt_peng1)
View(df_fly_not2)
#dive pgls
df_dive = read.csv('dive_and_gene.csv')
df_dive = df_dive[,c(2:6)]
dive_tree = read.tree('diving_birds_tree.tre')
row.names(df_dive) = df_dive$species_name
df_dive_mass = merge(df_dive, df_temp_fly)
df_dive_mass$Mass = as.numeric(df_dive_mass$Mass)
df_dive_mass$logMass = log10(df_dive_mass$Mass)
df_dive_mass$ability_to_dive_binar = 0
df_dive_mass[df_dive_mass$ability_to_dive != 'Non-diving',]$ability_to_dive_binar = 1
df_dive_mass1 = df_dive_mass[df_dive_mass$ability_to_dive != "Charadriiformes" & df_dive_mass$ability_to_dive != "Coraciiformes" & df_dive_mass$ability_to_dive != "Passeriformes" & df_dive_mass$ability_to_dive != "Procellariiformes" & df_dive_mass$ability_to_dive != "Gruiformes",]
df_dive_mass2 = df_dive_mass[df_dive_mass$ability_to_dive != 'Anseriformes' & df_dive_mass$ability_to_dive != "Sphenisciformes" & df_dive_mass$ability_to_dive != "Podicipediformes" & df_dive_mass$ability_to_dive != "Gaviiformes" & df_dive_mass$ability_to_dive != "Suliformes",]
df_dive1 = merge(df_dive, df_syn1)
unique(df_dive1$ability_to_dive)
df_dive2 = df_dive1
df_dive1[df_dive1$ability_to_dive == 'Anseriformes',]$ability_to_dive = 'Diving_all_species'
df_dive1[df_dive1$ability_to_dive == "Sphenisciformes",]$ability_to_dive = 'Diving_all_species'
df_dive1[df_dive1$ability_to_dive == "Podicipediformes",]$ability_to_dive = 'Diving_all_species'
df_dive1[df_dive1$ability_to_dive == "Gaviiformes",]$ability_to_dive = 'Diving_all_species'
df_dive1[df_dive1$ability_to_dive == "Suliformes",]$ability_to_dive = 'Diving_all_species'
df_dive1[df_dive1$ability_to_dive == "Charadriiformes",]$ability_to_dive = 'Diving_some_species'
df_dive1[df_dive1$ability_to_dive == "Coraciiformes",]$ability_to_dive = 'Diving_some_species'
df_dive1[df_dive1$ability_to_dive == "Passeriformes",]$ability_to_dive = 'Diving_some_species'
df_dive1[df_dive1$ability_to_dive == "Procellariiformes",]$ability_to_dive = 'Diving_some_species'
df_dive1[df_dive1$ability_to_dive == "Gruiformes",]$ability_to_dive = 'Diving_some_species'
df_dive1$GhAhSkew = as.numeric(as.character(df_dive1$GhAhSkew))
df_dive1$Mutation_AG_syn = as.numeric(as.character(df_dive1$Mutation_AG_syn))
row.names(df_dive1) = df_dive1$species_name
need_species = setdiff(df_dive$species_name, df_dive1$species_name)
correct_need_species = setdiff(df_dive$species_name, need_species)
dive_tree1 = keep.tip(dive_tree,correct_need_species)
df_dive1$ability_to_dive_binar = 0
df_dive1[df_dive1$ability_to_dive != 'Non-diving',]$ability_to_dive_binar = 1
corLambda2<-corPagel(value = 1, phy=not_fly_tree1,form=~spp2)
control <- glsControl(maxIter = 1000, msMaxIter=4000, returnObject = TRUE)
pgls_mt_not_fly1 = gls(Mutation_AG_syn~ability_to_fly_binar,
data=df_fly_not1,correlation=corLambda2, control = control)
summary(pgls_mt_not_fly1)
spp4 = rownames(df_dive1)
corBM4 = corBrownian(phy=dive_tree1,form=~spp4)
pgls_dive = gls(GhAhSkew~ability_to_dive_binar,
data=df_dive1,correlation=corBM4)
summary(pgls_dive)
corLambda4<-corPagel(value = 0, phy=dive_tree1,form=~spp4)
control <- glsControl(maxIter = 1000, msMaxIter=4000, returnObject = TRUE)
pgls_dive1 = gls(GhAhSkew~ability_to_dive_binar,
data=df_dive1,correlation=corLambda4, control = control)
summary(pgls_dive1)
df_dive11 = df_dive1[df_dive1$ability_to_dive != 'Diving_some_species',]
row.names(df_dive11) = df_dive11$species_name
need_species = setdiff(df_dive1$species_name, df_dive11$species_name)
correct_need_species = setdiff(df_dive1$species_name, need_species)
dive_tree11 = keep.tip(dive_tree1,correct_need_species)
spp5 = rownames(df_dive11)
corBM5 = corBrownian(phy=dive_tree11,form=~spp5)
pgls_dive1 = gls(GhAhSkew~ability_to_dive_binar,
data=df_dive11,correlation=corBM5)
summary(pgls_dive1)
corLambda5<-corPagel(value = 0, phy=dive_tree11,form=~spp5)
control <- glsControl(maxIter = 1000, msMaxIter=4000, returnObject = TRUE)
pgls_dive11 = gls(GhAhSkew~ability_to_dive_binar,
data=df_dive11,correlation=corLambda5, control = control)
summary(pgls_dive11)
pgls_dive11 = gls(Mutation_AG_syn~ability_to_dive_binar,
data=df_dive11,correlation=corLambda5, control = control)
summary(pgls_dive11)
df_dive12 = df_dive1[df_dive1$ability_to_dive != 'Diving_all_species',]
row.names(df_dive12) = df_dive12$species_name
need_species = setdiff(df_dive1$species_name, df_dive12$species_name)
correct_need_species = setdiff(df_dive1$species_name, need_species)
dive_tree12 = keep.tip(dive_tree1,correct_need_species)
spp6 = rownames(df_dive12)
corBM6 = corBrownian(phy=dive_tree12,form=~spp6)
pgls_dive2 = gls(GhAhSkew~ability_to_dive_binar,
data=df_dive12,correlation=corBM6)
summary(pgls_dive2)
corLambda6<-corPagel(value = 0, phy=dive_tree12,form=~spp6)
control <- glsControl(maxIter = 1000, msMaxIter=4000, returnObject = TRUE)
pgls_dive12 = gls(GhAhSkew~ability_to_dive_binar,
data=df_dive12,correlation=corLambda6, control = control)
summary(pgls_dive11)
summary(pgls_dive12)
pgls_dive12 = gls(Mutation_AG_syn~ability_to_dive_binar,
data=df_dive12,correlation=corLambda6, control = control)
summary(pgls_dive12)
pgls_dive1 = gls(Mutation_AG_syn~ability_to_dive_binar,
data=df_dive1,correlation=corLambda4, control = control)
summary(pgls_dive1)
View(df_fly_not1)
corLambda2<-corPagel(value = 0, phy=not_fly_tree1,form=~spp2)
control <- glsControl(maxIter = 1000, msMaxIter=4000, returnObject = TRUE)
pgls_mt_not_fly1 = gls(Mutation_AG_syn~ability_to_fly_binar,
data=df_fly_not1,correlation=corLambda2, control = control)
summary(pgls_mt_not_fly1)
#new PGLS for birds
rm(list = ls(all=TRUE))
#Multiple model
df_flight = read.csv('flight_and_gene.csv')
View(df_flight)
df_flight = df_flight[,c(2,3,4,5,6)]
df_dive = read.csv('dive_and_gene.csv')
View(df_dive)
df_dive = df_dive[,c(2:6)]
View(df_dive)
df_flight$ability_to_fly_binar = 0
df_flight[df_flight$ability_to_fly != 'Flying',]$ability_to_fly = 'Non-flying'
df_flight[df_flight$ability_to_fly != 'Non-flying',]$ability_to_fly_binar = 1
rm(list = ls(all=TRUE))
#Multiple model
df_flight = read.csv('flight_and_gene.csv')
df_flight = df_flight[,c(2,3,4,5,6)]
df_flight$ability_to_fly_binar = 0
df_flight[df_flight$ability_to_fly != 'Flying',]$ability_to_fly = 'Non-flying'
df_flight[df_flight$ability_to_fly != 'Flying',]$ability_to_fly_binar = 1
View(df_flight)
df_dive$ability_to_dive_binar = 0
df_dive = read.csv('dive_and_gene.csv')
df_dive = df_dive[,c(2:6)]
df_dive$ability_to_dive_binar = 0
View(df_dive)
df_dive[df_dive$ability_to_dive != 'Non-diving',]$ability_to_fly = 'Diving'
df_dive[df_dive$ability_to_dive != 'Non-diving',]$ability_to_dive = 'Diving'
df_dive[df_dive$ability_to_dive != 'Non-diving',]$ability_to_dive_binar = 1
df_dive_flight = merge(df_flight, df_dive)
View(df_dive_flight)
fit = lm(GhAhSkew ~ ability_to_fly_binar + ability_to_dive_binar + ability_to_fly_binar*ability_to_dive_binar)
fit = lm(GhAhSkew ~ ability_to_fly_binar + ability_to_dive_binar + ability_to_fly_binar*ability_to_dive_binar, data = df_dive_flight)
summary(fit)
rm(list = ls(all=TRUE))
