df_dive1 = merge(df_dive, df_syn1)
unique(df_dive1$ability_to_dive)
df_dive2 = df_dive1
df_dive1[df_dive1$ability_to_dive == 'Anseriformes',]$ability_to_dive = 'Diving_all_species'
df_dive1[df_dive1$ability_to_dive == "Sphenisciformes",]$ability_to_dive = 'Diving_all_species'
df_dive1[df_dive1$ability_to_dive == "Podicipediformes",]$ability_to_dive = 'Diving_all_species'
df_dive1[df_dive1$ability_to_dive == "Gaviiformes",]$ability_to_dive = 'Diving_all_species'
df_dive1[df_dive1$ability_to_dive == "Suliformes",]$ability_to_dive = 'Diving_all_species'
df_dive1[df_dive1$ability_to_dive == "Charadriiformes",]$ability_to_dive = 'Diving_some_species'
df_dive1[df_dive1$ability_to_dive == "Coraciiformes",]$ability_to_dive = 'Diving_some_species'
df_dive1[df_dive1$ability_to_dive == "Passeriformes",]$ability_to_dive = 'Diving_some_species'
df_dive1[df_dive1$ability_to_dive == "Procellariiformes",]$ability_to_dive = 'Diving_some_species'
df_dive1[df_dive1$ability_to_dive == "Gruiformes",]$ability_to_dive = 'Diving_some_species'
df_dive1$GhAhSkew = as.numeric(as.character(df_dive1$GhAhSkew))
df_dive1$Mutation_AG_syn = as.numeric(as.character(df_dive1$Mutation_AG_syn))
row.names(df_dive1) = df_dive1$species_name
need_species = setdiff(df_dive$species_name, df_dive1$species_name)
correct_need_species = setdiff(df_dive$species_name, need_species)
dive_tree1 = keep.tip(dive_tree,correct_need_species)
df_dive1$ability_to_dive_binar = 0
df_dive1[df_dive1$ability_to_dive != 'Non-diving',]$ability_to_dive_binar = 1
df_dive11 = df_dive1[df_dive1$ability_to_dive != 'Diving_some_species',]
row.names(df_dive11) = df_dive11$species_name
need_species = setdiff(df_dive1$species_name, df_dive11$species_name)
correct_need_species = setdiff(df_dive1$species_name, need_species)
dive_tree11 = keep.tip(dive_tree1,correct_need_species)
df_dive12 = df_dive1[df_dive1$ability_to_dive != 'Diving_all_species',]
row.names(df_dive12) = df_dive12$species_name
need_species = setdiff(df_dive1$species_name, df_dive12$species_name)
correct_need_species = setdiff(df_dive1$species_name, need_species)
dive_tree12 = keep.tip(dive_tree1,correct_need_species)
df_fly_peng1_tr = merge(df_fly_peng1, df_tr_ts)
df_fly_peng1_tr$TR_TS = as.numeric(df_fly_peng1_tr$TR_TS)
row.names(df_fly_peng1_tr) = df_fly_peng1_tr$species_name
View(df_fly_peng1_tr)
df_fly_peng1_tr = df_fly_peng1_tr[df_fly_peng1_tr$TR_TS != 'Inf',]
View(peng_fly_tree1)
row.names(df_fly_peng1_tr) = df_fly_peng1_tr$species_name
need_species = setdiff(df_fly_peng1$species_name, df_fly_peng1_tr$species_name)
correct_need_species = setdiff(df_fly_peng1$species_name, need_species)
peng_fly_tree1_tr<-keep.tip(peng_fly_tree1,correct_need_species)
View(peng_fly_tree1_tr)
spp1 = rownames(df_fly_peng1_tr)
corBM1 = corBrownian(phy=peng_fly_tree1_tr,form=~spp1)
pgls_mt_peng = gls(TR_TS~ability_to_fly_binar,
data=df_fly_peng1_tr,correlation=corBM1)
summary(pgls_mt_peng)
View(df_fly_not2)
df_fly_not1_tr = merge(df_fly_not1, df_tr_ts)
View(df_fly_not1_tr)
View(df_fly_not1_tr)
df_fly_not1_tr$TR_TS = as.numeric(df_fly_not1_tr$TR_TS)
df_fly_not1_tr = df_fly_not1_tr[df_fly_not1_tr$TR_TS != 'Inf',]
row.names(df_fly_not1_tr) = df_fly_not1_tr$species_name
need_species = setdiff(df_fly_not1$species_name, df_fly_not1_tr$species_name)
correct_need_species = setdiff(df_fly_not1$species_name, need_species)
View(not_fly_tree1)
View(not_fly_tree1)
not_fly_tree1_tr<-keep.tip(not_fly_tree1,correct_need_species)
View(not_fly_tree1_tr)
spp1 = rownames(df_fly_not1_tr)
corBM1 = corBrownian(phy=not_fly_tree1_tr,form=~spp1)
pgls_mt_peng_not = gls(TR_TS~ability_to_fly_binar,
data=df_fly_not1_tr,correlation=corBM1)
summary(pgls_mt_peng_not)
#new PGLS for birds
rm(list = ls(all=TRUE))
rm(list=ls(all=T))
library(ggtree)
library(ggplot2)
library(treeio)
library(dplyr)
library(ape)
library(geiger)
birds_tree = read.tree('anc_kg.treefile')
df_mtdna = read.csv('Birds_dataset_paper.csv')
df_need = data.frame()
for (i in unique(df_mtdna$species_name))
{
a = df_mtdna[df_mtdna$species_name == i,]
b = sum(a$ghahSkew)/12
ab = c(i,b)
df_need = rbind(df_need, ab)
}
names(df_need) = c('species_name', 'GhAhSkew')
df_need$species_name = gsub(' ', '_', df_need$species_name)
df_mutspec = read.table('C:/Users/User/Desktop/mutspec12.tsv', header = TRUE, fill = TRUE)
df_syn = df_mutspec[df_mutspec$Label == 'syn',]
df_syn = df_syn[,c(1,5,7)]
df_syn1 = reshape(data = df_syn, idvar = 'AltNode',
timevar = 'Mut',
direction = 'wide')
names(df_syn1) = c('species_name', 'Mutation_TG_syn', 'Mutation_TC_syn', 'Mutation_TA_syn', 'Mutation_GT_syn', 'Mutation_GC_syn',
'Mutation_GA_syn', 'Mutation_CT_syn', 'Mutation_CG_syn', 'Mutation_CA_syn', 'Mutation_AT_syn', 'Mutation_AG_syn', 'Mutation_AC_syn')
df_syn1 = df_syn1[,c(1,12)]
df_syn2 = df_syn1[!grepl('Node', df_syn1$species_name),]
df_syn3 = df_syn1[grepl('Node', df_syn1$species_name),]
need_species = setdiff(df_need$species_name, df_syn2$species_name)
correct_need_species = setdiff(df_need$species_name, need_species)
birds_ms_tree<-keep.tip(birds_tree,correct_need_species)
df_syn1$Mutation_AG_syn = as.numeric(df_syn1$Mutation_AG_syn)
typeof(df_syn1$Mutation_AG_syn)
#plot_sbs_on_tree <- function(label, indir='./data/processed/sbs_on_tree/', outdir='./figures/') {
#  mutspec_file <- paste(indir, label, '_ff.tsv', sep="")
#  print(mutspec_file)
#  grad_val = read.table(mutspec_file, sep="\t", header = T)
#  names(grad_val) = c('RefNode', 'label', 'MutSpec')  # this label is not the label in input args
names(df_syn1) = c('label', 'MutSpec')
test = full_join(as_tibble(birds_tree), tibble(df_syn1[,c(1,2)]), by = 'label')
#test = na.omit(test)
der = as.treedata(test)
label = 'Mutspec'
pdf('Birds.pdf',
width = 40,height = 300)
ggtree(der, aes(color = der@data$MutSpec)) + geom_tiplab(size = 2, colour = "darkgray") +
scale_color_continuous(low="green", high="red")
dev.off()
ggtree(der, aes(color = der@data$MutSpec)) + geom_tiplab(size = 2, colour = "darkgray") +
scale_color_continuous(low="green", high="red")
ggtree(der, aes(color = der@data$MutSpec)) + geom_tiplab(size = 4, colour = "darkgray") +
scale_color_continuous(low="green", high="red")
ggtree(der, aes(color = der@data$MutSpec)) + geom_tiplab(size = 6, colour = "darkgray") +
scale_color_continuous(low="green", high="red")
ggtree(der, aes(color = der@data$MutSpec)) + geom_tiplab(size = 6, colour = "darkgray") +
scale_color_continuous(low="green", high="red")+
theme(legend.position="bottom")+
labs(col=label)
ggtree(der, aes(color = der@data$MutSpec)) + geom_tiplab(size = 4, colour = "darkgray") +
scale_color_continuous(low="green", high="red")+
theme(legend.position="bottom")+
labs(col=label)
ggtree(der, aes(color = der@data$MutSpec)) + geom_tiplab(size = 4, colour = "darkgray") +
scale_color_continuous(low="green", high="red")+
theme(legend.position="bottom")+
labs(col=label)+
scale_size(3)
ggtree(der, aes(color = der@data$MutSpec)) + geom_tiplab(size = 4, colour = "darkgray") +
scale_color_continuous(low="green", high="red")+
theme(legend.position="bottom")+
labs(col=label)+
scale_size(3)
ggtree(der, aes(color = der@data$MutSpec)) + geom_tiplab(size = 4, colour = "darkgray") +
scale_color_continuous(low="green", high="red")+
theme(legend.position="bottom")+
labs(col=label)+
scale_size(5)
ggtree(der, aes(color = der@data$MutSpec)) + geom_tiplab(size = 4, colour = "darkgray") +
scale_color_continuous(low="green", high="red")+
theme(legend.position="bottom")+
labs(col=label)+
scale_size(5)
ggtree(der, aes(color = der@data$MutSpec)) + geom_tiplab(size = 4, colour = "darkgray") +
scale_color_continuous(low="green", high="red")+
theme(legend.position="bottom")+
labs(col=label)+
scale_size(3)
ggtree(der, aes(color = der@data$MutSpec)) + geom_tiplab(size = 4, colour = "darkgray") +
scale_color_continuous(low="green", high="red")+
theme(legend.position="bottom")+
labs(col=label)+
scale_size(3)
ggtree(der, aes(color = der@data$MutSpec)) + geom_tiplab(size = 4, colour = "darkgray") +
scale_color_continuous(low="green", high="red")+
theme(legend.position="bottom")+
labs(col=label)+
scale_size_continuous(range = c(1,2))
ggtree(der, aes(color = der@data$MutSpec)) + geom_tiplab(size = 4, colour = "darkgray") +
scale_color_continuous(low="green", high="red")+
theme(legend.position="bottom")+
labs(col=label)+
scale_size_continuous(range = c(1,2))
pdf('Birds.pdf',
width = 20,height = 300)
ggtree(der, aes(color = der@data$MutSpec)) + geom_tiplab(size = 4, colour = "darkgray") +
scale_color_continuous(low="green", high="red")+
theme(legend.position="bottom")+
labs(col=label)
dev.off()
pdf('Birds.pdf',
width = 20,height = 300)
ggtree(der, aes(color = der@data$MutSpec)) + geom_tiplab(size = 4, colour = "darkgray") +
scale_color_continuous(low="yellow", high="blue")+
theme(legend.position="bottom")+
labs(col=label)
dev.off()
pdf('Birds.pdf',
width = 20,height = 200)
ggtree(der, aes(color = der@data$MutSpec)) + geom_tiplab(size = 4, colour = "darkgray") +
scale_color_continuous(low="yellow", high="blue")+
theme(legend.position="bottom")+
labs(col=label)
dev.off()
pdf('Birds.pdf',
width = 20,height = 100)
ggtree(der, aes(color = der@data$MutSpec)) + geom_tiplab(size = 4, colour = "darkgray") +
scale_color_continuous(low="yellow", high="blue")+
theme(legend.position="bottom")+
labs(col=label)
dev.off()
pdf('Birds.pdf',
width = 30,height = 100)
ggtree(der, aes(color = der@data$MutSpec)) + geom_tiplab(size = 4, colour = "darkgray") +
scale_color_continuous(low="yellow", high="blue")+
theme(legend.position="bottom")+
labs(col=label)
dev.off()
pdf('Birds.pdf',
width = 20,height = 100)
ggtree(der, aes(color = der@data$MutSpec)) + geom_tiplab(size = 4, colour = "darkgray") +
scale_color_continuous(low="yellow", high="blue")+
theme(legend.position="bottom")+
labs(col=label)
dev.off()
pdf('Birds.pdf',
width = 30,height = 100)
ggtree(der, aes(color = der@data$MutSpec)) + geom_tiplab(size = 4, colour = "darkgray") +
scale_color_continuous(low="yellow", high="blue")+
theme(legend.position="bottom")+
labs(col=label)
dev.off()
rm(list=ls(all=T))
library(phytools)
library(nlme)
library(geiger)
library(ggplot2)
#flying birds
df_flight = read.csv('flight_and_gene.csv')
df_flight = df_flight[,c(2,3,4,5,6)]
df_flight$flight_num = 0
df_flight[df_flight$ability_to_fly != 'Flying',]$flight_num = 1
rownames(df_flight) = df_flight$species_name
flying_tree = read.tree('flying_birds_tree.tre')
name.check(flying_tree, df_flight)
df_flight$ability_to_fly = as.character(df_flight$ability_to_fly)
df_flight$GhAhSkew = as.numeric(as.character(df_flight$GhAhSkew))
df_flight$fAn = as.numeric(as.character(df_flight$fAn))
df_flight$fGn = as.numeric(as.character(df_flight$fGn))
df_flight$flight_num = as.numeric(as.character(df_flight$flight_num))
df_fly_peng = df_flight[df_flight$ability_to_fly == 'Flying' | df_flight$ability_to_fly =='Sphenisciformes',]
df_fly_not = df_flight[df_flight$ability_to_fly !='Sphenisciformes',]
peng_fly_tree = read.tree('flying_and_peng.tre')
no_peng_fly_tree = read.tree('flying_and_no_peng.tre')
df_temp_fly = read.csv('birds_metrics.csv')
df_temp_fly = df_temp_fly[,c(2:17)]
df_peng_mass = merge(df_fly_peng, df_temp_fly)
df_peng_mass$Mass = as.numeric(df_peng_mass$Mass)
df_peng_mass$logMass = log10(df_peng_mass$Mass)
ggplot(df_peng_mass, aes(x = logMass, y = GhAhSkew, color = ability_to_fly))+
geom_point()
df_peng_mass1 = df_peng_mass[df_peng_mass$ability_to_fly == 'Sphenisciformes',]
View(df_peng_mass1)
ggplot(df_peng_mass1, aes(x = logMass, y = GhAhSkew))+
geom_point()
View(df_peng_mass)
fit <- lm(GhAhSkew ~ logMass + ability_to_fly, data=df_peng_mass)
summary(fit)
df_peng_mass$ability_to_fly_binar = 0
df_peng_mass[df_peng_mass$ability_to_fly == 'Sphenisciformes',]$ability_to_fly_binar = 1
ggplot(df_peng_mass, aes(x = logMass, y = GhAhSkew, color = ability_to_fly))+
geom_point()
df_peng_mass1 = df_peng_mass[df_peng_mass$ability_to_fly == 'Sphenisciformes',]
ggplot(df_peng_mass1, aes(x = logMass, y = GhAhSkew))+
geom_point()
fit <- lm(GhAhSkew ~ logMass + ability_to_fly_binar, data=df_peng_mass)
summary(fit)
fit <- lm(GhAhSkew ~ logMass, data=df_peng_mass1)
summary(fit)
fit <- lm(GhAhSkew ~ Mass, data=df_peng_mass1)
summary(fit)
fit <- lm(GhAhSkew ~ logMass, data=df_peng_mass1)
summary(fit)
df_fly_not[df_fly_not$ability_to_fly != 'Flying',]$ability_to_fly = 'Non-flying'
df_paly_mass = merge(df_fly_not, df_temp_fly)
df_paly_mass$Mass = as.numeric(df_paly_mass$Mass)
df_paly_mass$logMass = log10(df_paly_mass$Mass)
ggplot(df_paly_mass, aes(x = logMass, y = GhAhSkew, color = ability_to_fly))+
geom_point()
df_paly_mass[df_paly_mass$ability_to_fly == 'Non-flying',]$ability_to_fly_binar = 1
View(df_paly_mass)
df_paly_mass$ability_to_fly_binar = 0
df_paly_mass[df_paly_mass$ability_to_fly == 'Non-flying',]$ability_to_fly_binar = 1
ggplot(df_paly_mass, aes(x = logMass, y = GhAhSkew, color = ability_to_fly))+
geom_point()
df_paly_mass1 = df_paly_mass[df_paly_mass$ability_to_fly == 'Non-flying',]
ggplot(df_paly_mass1, aes(x = logMass, y = GhAhSkew))+
geom_point()
fit <- lm(GhAhSkew ~ logMass + ability_to_fly_binar, data=df_paly_mass)
summary(fit)
fit <- lm(GhAhSkew ~ logMass, data=df_paly_mass1)
summary(fit)
#dive pgls
df_dive = read.csv('dive_and_gene.csv')
df_dive = df_dive[,c(2:6)]
dive_tree = read.tree('diving_birds_tree.tre')
row.names(df_dive) = df_dive$species_name
df_dive_mass = merge(df_dive, df_temp_fly)
df_dive_mass$Mass = as.numeric(df_dive_mass$Mass)
df_dive_mass$logMass = log10(df_dive_mass$Mass)
ggplot(df_dive_mass, aes(x = logMass, y = GhAhSkew, color = ability_to_dive))+
geom_point()
df_paly_mass$Mass = as.numeric(df_paly_mass$Mass)
df_paly_mass$logMass = log10(df_paly_mass$Mass)
ggplot(df_paly_mass, aes(x = logMass, y = GhAhSkew, color = ability_to_fly))+
geom_point()
ggplot(df_dive_mass, aes(x = logMass, y = GhAhSkew, color = ability_to_dive))+
geom_point()
df_dive_mass1 = df_dive_mass[df_dive_mass$ability_to_dive != "Charadriiformes" & df_dive_mass$ability_to_dive != "Coraciiformes" & df_dive_mass$ability_to_dive != "Passeriformes" & df_dive_mass$ability_to_dive != "Procellariiformes" & df_dive_mass$ability_to_dive != "Gruiformes",]
df_dive_mass2 = df_dive_mass[df_dive_mass$ability_to_dive != 'Anseriformes' & df_dive_mass$ability_to_dive != "Sphenisciformes" & df_dive_mass$ability_to_dive != "Podicipediformes" & df_dive_mass$ability_to_dive != "Gaviiformes" & df_dive_mass$ability_to_dive != "Suliformes",]
ggplot(df_dive_mass1, aes(x = logMass, y = GhAhSkew, color = ability_to_dive))+
geom_point()
df_dive_mass11 = df_dive_mass1[df_dive_mass1$ability_to_dive == 'Anseriformes',]
ggplot(df_dive_mass11, aes(x = logMass, y = GhAhSkew))+
geom_point()
df_dive_mass$ability_to_dive_binar = 0
View(df_dive_mass)
df_dive_mass[df_dive_mass$ability_to_dive != 'Non-diving',]$ability_to_dive_binar = 1
df_dive_mass1 = df_dive_mass[df_dive_mass$ability_to_dive != "Charadriiformes" & df_dive_mass$ability_to_dive != "Coraciiformes" & df_dive_mass$ability_to_dive != "Passeriformes" & df_dive_mass$ability_to_dive != "Procellariiformes" & df_dive_mass$ability_to_dive != "Gruiformes",]
df_dive_mass2 = df_dive_mass[df_dive_mass$ability_to_dive != 'Anseriformes' & df_dive_mass$ability_to_dive != "Sphenisciformes" & df_dive_mass$ability_to_dive != "Podicipediformes" & df_dive_mass$ability_to_dive != "Gaviiformes" & df_dive_mass$ability_to_dive != "Suliformes",]
ggplot(df_dive_mass1, aes(x = logMass, y = GhAhSkew, color = ability_to_dive))+
geom_point()
df_dive_mass11 = df_dive_mass1[df_dive_mass1$ability_to_dive == 'Anseriformes',]
ggplot(df_dive_mass11, aes(x = logMass, y = GhAhSkew))+
geom_point()
fit <- lm(GhAhSkew ~ logMass + ability_to_fly_binar, data=df_paly_mass)
summary(fit)
fit <- lm(GhAhSkew ~ logMass + ability_to_dive_binar, data=df_dive_mass)
summary(fit)
fit <- lm(GhAhSkew ~ logMass + ability_to_dive_binar, data=df_dive_mass1)
summary(fit)
fit <- lm(GhAhSkew ~ logMass + ability_to_dive_binar, data=df_dive_mass11)
fit <- lm(GhAhSkew ~ logMass, data=df_dive_mass11)
summary(fit)
fit <- lm(GhAhSkew ~ logMass + ability_to_dive_binar, data=df_dive_mass2)
summary(fit)
#new PGLS for birds
rm(list = ls(all=TRUE))
library(phytools)
library(nlme)
library(geiger)
library(ggplot2)
#flying birds
df_flight = read.csv('flight_and_gene.csv')
df_flight = df_flight[,c(2,3,4,5,6)]
df_flight$flight_num = 0
df_flight[df_flight$ability_to_fly != 'Flying',]$flight_num = 1
rownames(df_flight) = df_flight$species_name
flying_tree = read.tree('flying_birds_tree.tre')
name.check(flying_tree, df_flight)
df_flight$ability_to_fly = as.character(df_flight$ability_to_fly)
df_flight$GhAhSkew = as.numeric(as.character(df_flight$GhAhSkew))
df_flight$fAn = as.numeric(as.character(df_flight$fAn))
df_flight$fGn = as.numeric(as.character(df_flight$fGn))
df_flight$flight_num = as.numeric(as.character(df_flight$flight_num))
df_fly_peng = df_flight[df_flight$ability_to_fly == 'Flying' | df_flight$ability_to_fly =='Sphenisciformes',]
df_fly_not = df_flight[df_flight$ability_to_fly !='Sphenisciformes',]
peng_fly_tree = read.tree('flying_and_peng.tre')
no_peng_fly_tree = read.tree('flying_and_no_peng.tre')
df_temp_fly = read.csv('birds_metrics.csv')
df_temp_fly = df_temp_fly[,c(2:17)]
df_peng_mass = merge(df_fly_peng, df_temp_fly)
df_peng_mass$Mass = as.numeric(df_peng_mass$Mass)
df_peng_mass$logMass = log10(df_peng_mass$Mass)
df_peng_mass$ability_to_fly_binar = 0
df_peng_mass[df_peng_mass$ability_to_fly == 'Sphenisciformes',]$ability_to_fly_binar = 1
ggplot(df_peng_mass, aes(x = logMass, y = GhAhSkew, color = ability_to_fly))+
geom_point()
df_peng_mass1 = df_peng_mass[df_peng_mass$ability_to_fly == 'Sphenisciformes',]
ggplot(df_peng_mass1, aes(x = logMass, y = GhAhSkew))+
geom_point()
View(df_peng_mass)
View(df_fly_not)
fit <- lm(GhAhSkew ~ logMass, data=df_peng_mass1)
summary(fit)
View(df_temp_fly)
unique(df_fly_not$ability_to_fly)
df_fly_not1 = df_fly_not[df_fly_not$ability_to_fly == "Apterygiformes",]
ggplot(df_fly_not1, aes(x = logMass, y = GhAhSkew))+
geom_point()
View(df_fly_not1)
df_fly_not2 = df_fly_not[df_fly_not$ability_to_fly == "Gruiformes",]
ggplot(df_fly_not1, aes(x = logMass, y = GhAhSkew))+
geom_point()
df_fly_not3 = df_fly_not[df_fly_not$ability_to_fly == "Casuariiformes",]
ggplot(df_fly_not1, aes(x = logMass, y = GhAhSkew))+
geom_point()
View(df_fly_not3)
df_paly_mass = merge(df_fly_not, df_temp_fly)
df_paly_mass$Mass = as.numeric(df_paly_mass$Mass)
df_paly_mass$logMass = log10(df_paly_mass$Mass)
df_paly_mass$ability_to_fly_binar = 0
df_fly_not1 = df_paly_mass[df_paly_mass$ability_to_fly == "Apterygiformes",]
ggplot(df_fly_not1, aes(x = logMass, y = GhAhSkew))+
geom_point()
ggplot(df_fly_not1, aes(x = logMass, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)
ggplot(df_fly_not1, aes(x = logMass, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)
df_fly_not2 = df_paly_mass[df_paly_mass$ability_to_fly == "Gruiformes",]
ggplot(df_fly_not2, aes(x = logMass, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)
df_fly_not3 = df_paly_mass[df_paly_mass$ability_to_fly == "Casuariiformes",]
ggplot(df_fly_not3, aes(x = logMass, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)
df_fly_not4 = df_paly_mass[df_paly_mass$ability_to_fly == "Tinamiformes",]
ggplot(df_fly_not4, aes(x = logMass, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)
df_fly_not5 = df_paly_mass[df_paly_mass$ability_to_fly == "Columbiformes",]
ggplot(df_fly_not5, aes(x = logMass, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)
df_fly_not6 = df_paly_mass[df_paly_mass$ability_to_fly == "Rheiformes",]
ggplot(df_fly_not6, aes(x = logMass, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)
View(df_fly_not6)
df_fly_not7 = df_paly_mass[df_paly_mass$ability_to_fly == "Eurypygiformes",]
ggplot(df_fly_not7, aes(x = logMass, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)
df_fly_not8 = df_paly_mass[df_paly_mass$ability_to_fly == "Psittaciformes",]
ggplot(df_fly_not8, aes(x = logMass, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)
df_fly_not9 = df_paly_mass[df_paly_mass$ability_to_fly == "Struthioniformes",]
ggplot(df_fly_not9, aes(x = logMass, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)
df_fly_not8 = df_paly_mass[df_paly_mass$ability_to_fly == "Psittaciformes",]
ggplot(df_fly_not8, aes(x = logMass, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)
df_fly_not9 = df_paly_mass[df_paly_mass$ability_to_fly == "Struthioniformes",]
ggplot(df_fly_not9, aes(x = logMass, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)
#dive pgls
df_dive = read.csv('dive_and_gene.csv')
df_dive = df_dive[,c(2:6)]
dive_tree = read.tree('diving_birds_tree.tre')
row.names(df_dive) = df_dive$species_name
df_dive_mass = merge(df_dive, df_temp_fly)
df_dive_mass$Mass = as.numeric(df_dive_mass$Mass)
df_dive_mass$logMass = log10(df_dive_mass$Mass)
ggplot(df_dive_mass, aes(x = logMass, y = GhAhSkew, color = ability_to_dive))+
geom_point()
unique(df_dive_mass$ability_to_dive)
df_dive_mass1 = df_dive_mass[df_dive_mass$ability_to_fly == "Charadriiformes",]
ggplot(df_fdive_mass, aes(x = logMass, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)
df_dive_mass1 = df_dive_mass[df_dive_mass$ability_to_fly == "Charadriiformes",]
ggplot(df_dive_mass1, aes(x = logMass, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)
df_dive_mass1 = df_dive_mass[df_dive_mass$ability_to_dive == "Charadriiformes",]
ggplot(df_dive_mass1, aes(x = logMass, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)
df_dive_mass2 = df_dive_mass[df_dive_mass$ability_to_dive == "Anseriformes",]
ggplot(df_dive_mass2, aes(x = logMass, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)
df_dive_mass3 = df_dive_mass[df_dive_mass$ability_to_dive == "Coraciiformes",]
ggplot(df_dive_mass3, aes(x = logMass, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)
df_dive_mass4 = df_dive_mass[df_dive_mass$ability_to_dive == "Suliformes",]
ggplot(df_dive_mass4, aes(x = logMass, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)
df_dive_mass5 = df_dive_mass[df_dive_mass$ability_to_dive == "Sphenisciformes",]
ggplot(df_dive_mass5, aes(x = logMass, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)
df_dive_mass6 = df_dive_mass[df_dive_mass$ability_to_dive == "Passeriformes",]
ggplot(df_dive_mass6, aes(x = logMass, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)
df_dive_mass7 = df_dive_mass[df_dive_mass$ability_to_dive == "Procellariiformes",]
ggplot(df_dive_mass7, aes(x = logMass, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)
df_dive_mass8 = df_dive_mass[df_dive_mass$ability_to_dive == "Gruiformes",]
ggplot(df_dive_mass8, aes(x = logMass, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)
df_dive_mass7 = df_dive_mass[df_dive_mass$ability_to_dive == "Procellariiformes",]
ggplot(df_dive_mass7, aes(x = logMass, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)
df_dive_mass8 = df_dive_mass[df_dive_mass$ability_to_dive == "Gruiformes",]
ggplot(df_dive_mass8, aes(x = logMass, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)
df_dive_mass9 = df_dive_mass[df_dive_mass$ability_to_dive == "Gaviiformes",]
ggplot(df_dive_mass9, aes(x = logMass, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)
df_dive_mass10 = df_dive_mass[df_dive_mass$ability_to_dive == "Podicipediformes",]
ggplot(df_dive_mass10, aes(x = logMass, y = GhAhSkew))+
geom_point()+
geom_smooth(method = 'lm', formula = y~x)
#new PGLS for birds
rm(list = ls(all=TRUE))
df_mtdna = read.csv('Birds_dataset_paper.csv')
View(df_mtdna)
rm(list=ls(all=T))
