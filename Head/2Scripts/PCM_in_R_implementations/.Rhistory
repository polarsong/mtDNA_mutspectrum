need_species = setdiff(df_flight$species_name, df_flight1$species_name)
correct_need_species = setdiff(df_flight$species_name, need_species)
birds_ms_tree<-keep.tip(flying_tree,correct_need_species)
df_flight1$GhAhSkew = as.numeric(df_flight1$GhAhSkew)
df_flight1$Mutation_AG = as.numeric(df_flight1$Mutation_AG)
df_flight1$Mutation_AG_syn = as.numeric(df_flight1$Mutation_AG_syn)
df_flight1$Mutation_CT = as.numeric(df_flight1$Mutation_CT)
df_flight1$Mutation_CT_syn = as.numeric(df_flight1$Mutation_CT_syn)
rownames(df_flight1)= df_flight1$species_name
df_flight1$double_fly = 0
df_flight1[df_flight1$ability_to_fly == 'Flying',]$double_fly = 1
df_temp_fly = read.csv('birds_metrics.csv')
df_temp_fly = df_temp_fly[,c(2:17)]
df_flight2 = merge(df_flight1, df_temp_fly)
need_species = setdiff(df_flight1$species_name, df_flight2$species_name)
correct_need_species = setdiff(df_flight1$species_name, need_species)
birds_ms_and_temp_tree<-keep.tip(birds_ms_tree,correct_need_species)
row.names(df_flight2) = df_flight2$species_name
df_flight2$Latitude = gsub(',', '.', df_flight2$Latitude)
df_flight2$TempRange = gsub(',', '.', df_flight2$TempRange)
df_flight2$AnnualPrecip = gsub(',', '.', df_flight2$AnnualPrecip)
df_flight2$PrecipRange= gsub(',', '.', df_flight2$PrecipRange)
df_flight2$AnnualTemp= gsub(',', '.', df_flight2$AnnualTemp)
df_flight2$AnnualTemp = as.numeric(as.character(df_flight2$AnnualTemp))
df_flight2$Beak_length_Culmen = as.numeric(as.character(df_flight2$Beak_length_Culmen))
df_flight2$Beak_length_Nares = as.numeric(as.character(df_flight2$Beak_length_Nares))
df_flight2$Beak_width = as.numeric(as.character(df_flight2$Beak_width))
df_flight2$Beak_depth = as.numeric(as.character(df_flight2$Beak_depth))
df_flight2$Tarsus_length = as.numeric(as.character(df_flight2$Tarsus_length))
df_flight2$Wing_length = as.numeric(as.character(df_flight2$Wing_length))
df_flight2$Kipps_distance = as.numeric(as.character(df_flight2$Kipps_distance))
df_flight2$Hand_wing_index = as.numeric(as.character(df_flight2$Hand_wing_index))
df_flight2$Tail_length = as.numeric(as.character(df_flight2$Tail_length))
df_flight2$Mass = as.numeric(as.character(df_flight2$Mass))
df_flight2$Latitude = as.numeric(as.character(df_flight2$Latitude))
df_flight2$AnnualTemp = as.numeric(as.character(df_flight2$AnnualTemp))
df_flight2$TempRange = as.numeric(as.character(df_flight2$TempRange))
df_flight2$AnnualPrecip = as.numeric(as.character(df_flight2$AnnualPrecip))
df_flight2$PrecipRange = as.numeric(as.character(df_flight2$PrecipRange))
df_flight2$Mass = log10(df_flight2$Mass)
df_flight2$Beak_length_Culmen = log10(df_flight2$Beak_length_Culmen)
df_flight2$Beak_length_Nares = log10(df_flight2$Beak_length_Nares)
df_flight2$Beak_width = log10(df_flight2$Beak_width)
df_flight2$Beak_depth = log10(df_flight2$Beak_depth)
df_flight2$Tarsus_length = log10(df_flight2$Tarsus_length)
df_flight2$Wing_length = log10(df_flight2$Wing_length)
df_flight2$Kipps_distance = log10(df_flight2$Kipps_distance)
df_flight2$Hand_wing_index = log10(df_flight2$Hand_wing_index)
df_flight2$Tail_length = log10(df_flight2$Tail_length)
rm(df_for_color1)
df_for_color = df_mutspec[df_mutspec$Label == 'syn',]
df_for_color = df_for_color[,c(1,5,7)]
df_for_color1 = reshape(data = df_for_color, idvar = 'AltNode',
timevar = 'Mut',
direction = 'wide')
df_for_color1$label = 'A>G'
df_for_color1 = df_for_color1[,c(1,14,12)]
names(df_for_color1) = c('species_name', 'label','Mutation_AG_syn')
df_for_color1$Mutation_AG_syn = as.numeric(df_for_color1$Mutation_AG_syn)
View(df_for_color1)
label <- "T>G"
# T on tree
label <- 'T share'
mutspec_file <- './data/processed/percent_of_T.tsv'
grad_val = read.table('percent_of_T.tsv', sep="\t", header = T)
names(grad_val) = c('RefNode', 'label', 'MutSpec')
my_tree = read.tree("./data/interim/iqtree_runs/drun1/anc.treefile")
my_tree = read.tree("anc.treefile")
View(my_tree)
View(grad_val)
test = full_join(as_tibble(my_tree), tibble(grad_val[,c(2,3)]), by = 'label')
View(test)
der = as.treedata(test)
View(der)
der <- groupOTU(der, c("Halicephalobus_mephisto", "Caenorhabditis_elegans"))
ggtree(der, aes(color = der@data$MutSpec)) + geom_tiplab(size = 4, colour = "darkgray") +
scale_color_continuous(low="green", high="red") +
theme(legend.position="bottom")+
labs(col=label)+
geom_tippoint(aes(alpha = group), col = "purple")+
scale_color_manual(values = c(0,1), aesthetics = "alpha")
View(df_for_color1)
View(birds_ms_tree)
View(birds_ms_and_temp_tree)
View(birds_tree)
View(flying_tree)
View(df_flight)
View(df_need)
df_need = data.frame()
for (i in unique(df_mtdna$species_name))
{
a = df_mtdna[df_mtdna$species_name == i,]
b = sum(a$ghahSkew)/12
ab = c(i,b)
df_need = rbind(df_need, ab)
}
names(df_need) = c('species_name', 'GhAhSkew')
df_need$species_name = gsub(' ', '_', df_need$species_name)
View(df_syn1)
View(flying_tree)
View(df_syn)
View(birds_ms_and_temp_tree)
View(birds_ms_tree)
View(birds_tree)
View(df_need)
View(df_syn1)
View(df_syn1)
need_species = setdiff(df_need$species_name, df_syn1$species_name)
correct_need_species = setdiff(df_need$species_name, need_species)
birds_ms_color_tree<-keep.tip(birds_tree,correct_need_species)
View(df_for_color1)
View(birds_ms_color_tree)
View(birds_tree)
View(birds_ms_tree)
View(birds_ms_color_tree)
View(birds_ms_and_temp_tree)
View(df_for_color1)
View(df_for_color)
View(my_tree)
View(birds_tree)
rm(list=ls(all=T))
birds_tree = read.tree('anc_kg.treefile')
df_mtdna = read.csv('Birds_dataset_paper.csv')
df_need = data.frame()
for (i in unique(df_mtdna$species_name))
{
a = df_mtdna[df_mtdna$species_name == i,]
b = sum(a$ghahSkew)/12
ab = c(i,b)
df_need = rbind(df_need, ab)
}
names(df_need) = c('species_name', 'GhAhSkew')
df_need$species_name = gsub(' ', '_', df_need$species_name)
df_mutspec = read.table('C:/Users/User/Desktop/mutspec12.tsv', header = TRUE, fill = TRUE)
df_syn = df_mutspec[df_mutspec$Label == 'syn',]
View(df_syn)
df_syn = df_syn[,c(1,5,7)]
df_syn1 = reshape(data = df_syn, idvar = 'AltNode',
timevar = 'Mut',
direction = 'wide')
View(df_syn1)
names(df_syn1) = c('species_name', 'Mutation_TG_syn', 'Mutation_TC_syn', 'Mutation_TA_syn', 'Mutation_GT_syn', 'Mutation_GC_syn',
'Mutation_GA_syn', 'Mutation_CT_syn', 'Mutation_CG_syn', 'Mutation_CA_syn', 'Mutation_AT_syn', 'Mutation_AG_syn', 'Mutation_AC_syn')
df_syn1 = df_syn[,c(1,12)]
df_syn1 = df_syn1[,c(1,12)]
View(df_syn1)
df_syn2 = df_syn1[!grepl('Node', df_syn1$species_name),]
df_syn3 = df_syn1[grepl('Node', df_syn1$species_name),]
View(df_syn3)
View(df_syn2)
need_species = setdiff(df_need$species_name, df_syn2$species_name)
correct_need_species = setdiff(df_need$species_name, need_species)
birds_ms_tree<-keep.tip(birds_tree,correct_need_species)
View(birds_ms_tree)
a = name.check(df_syn2, birds_tree)
ecomorph_tree<-drop.tip(birds_tree,a$data_not_tree)
a
View(df_syn1)
typeof(df_for_color1$Mutation_AG_syn)
typeof(df_syn1$Mutation_AG_syn)
df_syn1 = as.numeric(df_syn1$Mutation_AG_syn)
df_syn1 = reshape(data = df_syn, idvar = 'AltNode',
timevar = 'Mut',
direction = 'wide')
names(df_syn1) = c('species_name', 'Mutation_TG_syn', 'Mutation_TC_syn', 'Mutation_TA_syn', 'Mutation_GT_syn', 'Mutation_GC_syn',
'Mutation_GA_syn', 'Mutation_CT_syn', 'Mutation_CG_syn', 'Mutation_CA_syn', 'Mutation_AT_syn', 'Mutation_AG_syn', 'Mutation_AC_syn')
df_syn1 = df_syn1[,c(1,12)]
df_syn1$Mutation_AG_syn = as.numeric(df_syn1$Mutation_AG_syn)
typeof(df_syn1$Mutation_AG_syn)
#plot_sbs_on_tree <- function(label, indir='./data/processed/sbs_on_tree/', outdir='./figures/') {
#  mutspec_file <- paste(indir, label, '_ff.tsv', sep="")
#  print(mutspec_file)
#  grad_val = read.table(mutspec_file, sep="\t", header = T)
#  names(grad_val) = c('RefNode', 'label', 'MutSpec')  # this label is not the label in input args
names(df_syn1) = c('label', 'MutSpec')
test = full_join(as_tibble(birds_tree), tibble(df_syn1[,c(1,2)]), by = 'label')
View(test)
is.na(test)
na.omit(test)
test = na.omit(test)
der = as.treedata(test)
View(der)
ggtree(der, aes(color = der@data$species_name)) + geom_tiplab(size = 3, colour = "darkgray") +
scale_color_continuous(low="green", high="red") +
theme(legend.position="bottom") +
labs(col=label) +
geom_tippoint(aes(alpha = group), col = "red") +
scale_color_manual(values = c(0,1), aesthetics = "alpha")
ggtree(der, aes(color = der@data$MutSpec)) + geom_tiplab(size = 3, colour = "darkgray") +
scale_color_continuous(low="green", high="red") +
theme(legend.position="bottom") +
labs(col=label) +
geom_tippoint(aes(alpha = group), col = "red") +
scale_color_manual(values = c(0,1), aesthetics = "alpha")
View(der)
View(test)
ggtree(der, aes(color = der@data$MutSpec)) + geom_tiplab(size = 4, colour = "darkgray") +
scale_color_continuous(low="green", high="red") +
theme(legend.position="bottom")+
labs(col=label)+
geom_tippoint(aes(alpha = group), col = "purple")+
scale_color_manual(values = c(0,1), aesthetics = "alpha")
ggtree(der, aes(color = der@data$MutSpec)) +
geom_tiplab(size = 4, colour = "darkgray")
View(test)
View(df_syn1)
ggtree(der, aes(color = der@data$MutSpec))
ggtree(der))
ggtree(der)
View(test)
View(df_syn1)
#plot_sbs_on_tree <- function(label, indir='./data/processed/sbs_on_tree/', outdir='./figures/') {
#  mutspec_file <- paste(indir, label, '_ff.tsv', sep="")
#  print(mutspec_file)
#  grad_val = read.table(mutspec_file, sep="\t", header = T)
#  names(grad_val) = c('RefNode', 'label', 'MutSpec')  # this label is not the label in input args
names(df_syn1) = c('label', 'MutSpec')
test = full_join(as_tibble(birds_tree), tibble(df_syn1[,c(1,2)]), by = 'label')
#test = na.omit(test)
der = as.treedata(test)
ggtree(der)
ggtree(der, aes(color = der@data$MutSpec))
ggtree(der, aes(color = der@data$MutSpec)) + geom_tiplab(size = 4, colour = "darkgray") +
scale_color_continuous(low="green", high="red") +
theme(legend.position="bottom")+
labs(col=label)+
geom_tippoint(aes(alpha = group), col = "purple")+
scale_color_manual(values = c(0,1), aesthetics = "alpha")
label = 'Mutspec'
ggtree(der, aes(color = der@data$MutSpec)) + geom_tiplab(size = 4, colour = "darkgray") +
scale_color_continuous(low="green", high="red") +
theme(legend.position="bottom")+
labs(col=label)+
geom_tippoint(aes(alpha = group), col = "purple")+
scale_color_manual(values = c(0,1), aesthetics = "alpha")
ggtree(der, aes(color = der@data$MutSpec)) + geom_tiplab(size = 4, colour = "darkgray") +
scale_color_continuous(low="green", high="red")
ggtree(der, aes(color = der@data$MutSpec)) + geom_tiplab(size = 2, colour = "darkgray") +
scale_color_continuous(low="green", high="red")
rm(list=ls(all=T))
rm(list=ls(all=T))
library(ggtree)
library(ggplot2)
library(treeio)
library(dplyr)
library(ape)
library(geiger)
birds_tree = read.tree('anc_kg.treefile')
df_mtdna = read.csv('Birds_dataset_paper.csv')
df_need = data.frame()
for (i in unique(df_mtdna$species_name))
{
a = df_mtdna[df_mtdna$species_name == i,]
b = sum(a$ghahSkew)/12
ab = c(i,b)
df_need = rbind(df_need, ab)
}
names(df_need) = c('species_name', 'GhAhSkew')
df_need$species_name = gsub(' ', '_', df_need$species_name)
df_mutspec = read.table('C:/Users/User/Desktop/mutspec12.tsv', header = TRUE, fill = TRUE)
df_syn = df_mutspec[df_mutspec$Label == 'syn',]
df_syn = df_syn[,c(1,5,7)]
df_syn1 = reshape(data = df_syn, idvar = 'AltNode',
timevar = 'Mut',
direction = 'wide')
names(df_syn1) = c('species_name', 'Mutation_TG_syn', 'Mutation_TC_syn', 'Mutation_TA_syn', 'Mutation_GT_syn', 'Mutation_GC_syn',
'Mutation_GA_syn', 'Mutation_CT_syn', 'Mutation_CG_syn', 'Mutation_CA_syn', 'Mutation_AT_syn', 'Mutation_AG_syn', 'Mutation_AC_syn')
df_syn1 = df_syn1[,c(1,12)]
df_syn2 = df_syn1[!grepl('Node', df_syn1$species_name),]
df_syn3 = df_syn1[grepl('Node', df_syn1$species_name),]
need_species = setdiff(df_need$species_name, df_syn2$species_name)
correct_need_species = setdiff(df_need$species_name, need_species)
birds_ms_tree<-keep.tip(birds_tree,correct_need_species)
df_syn1$Mutation_AG_syn = as.numeric(df_syn1$Mutation_AG_syn)
typeof(df_syn1$Mutation_AG_syn)
#plot_sbs_on_tree <- function(label, indir='./data/processed/sbs_on_tree/', outdir='./figures/') {
#  mutspec_file <- paste(indir, label, '_ff.tsv', sep="")
#  print(mutspec_file)
#  grad_val = read.table(mutspec_file, sep="\t", header = T)
#  names(grad_val) = c('RefNode', 'label', 'MutSpec')  # this label is not the label in input args
names(df_syn1) = c('label', 'MutSpec')
test = full_join(as_tibble(birds_tree), tibble(df_syn1[,c(1,2)]), by = 'label')
#test = na.omit(test)
der = as.treedata(test)
label = 'Mutspec'
ggtree(der, aes(color = der@data$MutSpec)) + geom_tiplab(size = 2, colour = "darkgray") +
scale_color_continuous(low="green", high="red")
rm(list=ls(all=T))
library(ggtree)
library(ggplot2)
library(treeio)
library(dplyr)
library(ape)
library(geiger)
birds_tree = read.tree('anc_kg.treefile')
df_mtdna = read.csv('Birds_dataset_paper.csv')
df_need = data.frame()
for (i in unique(df_mtdna$species_name))
{
a = df_mtdna[df_mtdna$species_name == i,]
b = sum(a$ghahSkew)/12
ab = c(i,b)
df_need = rbind(df_need, ab)
}
names(df_need) = c('species_name', 'GhAhSkew')
df_need$species_name = gsub(' ', '_', df_need$species_name)
df_mutspec = read.table('C:/Users/User/Desktop/mutspec12.tsv', header = TRUE, fill = TRUE)
df_syn = df_mutspec[df_mutspec$Label == 'syn',]
df_syn = df_syn[,c(1,5,7)]
df_syn1 = reshape(data = df_syn, idvar = 'AltNode',
timevar = 'Mut',
direction = 'wide')
names(df_syn1) = c('species_name', 'Mutation_TG_syn', 'Mutation_TC_syn', 'Mutation_TA_syn', 'Mutation_GT_syn', 'Mutation_GC_syn',
'Mutation_GA_syn', 'Mutation_CT_syn', 'Mutation_CG_syn', 'Mutation_CA_syn', 'Mutation_AT_syn', 'Mutation_AG_syn', 'Mutation_AC_syn')
df_syn1 = df_syn1[,c(1,12)]
df_syn2 = df_syn1[!grepl('Node', df_syn1$species_name),]
df_syn3 = df_syn1[grepl('Node', df_syn1$species_name),]
need_species = setdiff(df_need$species_name, df_syn2$species_name)
correct_need_species = setdiff(df_need$species_name, need_species)
birds_ms_tree<-keep.tip(birds_tree,correct_need_species)
df_syn1$Mutation_AG_syn = as.numeric(df_syn1$Mutation_AG_syn)
typeof(df_syn1$Mutation_AG_syn)
#plot_sbs_on_tree <- function(label, indir='./data/processed/sbs_on_tree/', outdir='./figures/') {
#  mutspec_file <- paste(indir, label, '_ff.tsv', sep="")
#  print(mutspec_file)
#  grad_val = read.table(mutspec_file, sep="\t", header = T)
#  names(grad_val) = c('RefNode', 'label', 'MutSpec')  # this label is not the label in input args
names(df_syn1) = c('label', 'MutSpec')
test = full_join(as_tibble(birds_tree), tibble(df_syn1[,c(1,2)]), by = 'label')
#test = na.omit(test)
der = as.treedata(test)
label = 'Mutspec'
ggtree(der, aes(color = der@data$MutSpec)) + geom_tiplab(size = 2, colour = "darkgray") +
scale_color_continuous(low="green", high="red")
pdf('Birds comparative species A>G mutspec tree.pdf')
pdf('Birds.pdf')
ggtree(der, aes(color = der@data$MutSpec)) + geom_tiplab(size = 2, colour = "darkgray") +
scale_color_continuous(low="green", high="red")
dev.off()
pdf('Birds.pdf',
height = 3000,
paper = "A4")
ggtree(der, aes(color = der@data$MutSpec)) + geom_tiplab(size = 2, colour = "darkgray") +
scale_color_continuous(low="green", high="red")
dev.off()
pdf('Birds.pdf',
width = 40,height = 3000,
paper = "A4")
ggtree(der, aes(color = der@data$MutSpec)) + geom_tiplab(size = 2, colour = "darkgray") +
scale_color_continuous(low="green", high="red")
dev.off()
pdf('Birds.pdf',
width = 40,height = 30000,
paper = "A4")
ggtree(der, aes(color = der@data$MutSpec)) + geom_tiplab(size = 2, colour = "darkgray") +
scale_color_continuous(low="green", high="red")
dev.off()
pdf('Birds.pdf',
width = 40,height = 30000)
ggtree(der, aes(color = der@data$MutSpec)) + geom_tiplab(size = 2, colour = "darkgray") +
scale_color_continuous(low="green", high="red")
dev.off()
pdf('Birds.pdf',
width = 40,height = 3000)
ggtree(der, aes(color = der@data$MutSpec)) + geom_tiplab(size = 2, colour = "darkgray") +
scale_color_continuous(low="green", high="red")
dev.off()
pdf('Birds.pdf',
width = 40,height = 300)
ggtree(der, aes(color = der@data$MutSpec)) + geom_tiplab(size = 2, colour = "darkgray") +
scale_color_continuous(low="green", high="red")
dev.off()
rm(list=ls(all=T))
library(phytools)
library(nlme)
library(geiger)
#flying birds
df_flight = read.csv('flight_and_gene.csv')
df_flight = df_flight[,c(2,3,4,5,6)]
df_flight$flight_num = 0
df_flight[df_flight$ability_to_fly != 'Flying',]$flight_num = 1
rownames(df_flight) = df_flight$species_name
flying_tree = read.tree('flying_birds_tree.tre')
name.check(flying_tree, df_flight)
df_flight$ability_to_fly = as.character(df_flight$ability_to_fly)
df_flight$GhAhSkew = as.numeric(as.character(df_flight$GhAhSkew))
df_flight$fAn = as.numeric(as.character(df_flight$fAn))
df_flight$fGn = as.numeric(as.character(df_flight$fGn))
df_flight$flight_num = as.numeric(as.character(df_flight$flight_num))
df_fly_peng = df_flight[df_flight$ability_to_fly == 'Flying' | df_flight$ability_to_fly =='Sphenisciformes',]
df_fly_not = df_flight[df_flight$ability_to_fly !='Sphenisciformes',]
peng_fly_tree = read.tree('flying_and_peng.tre')
no_peng_fly_tree = read.tree('flying_and_no_peng.tre')
spp = rownames(df_fly_peng)
corBM = corBrownian(phy=peng_fly_tree,form=~spp)
pgls_flying = gls(GhAhSkew~ability_to_fly,
data=df_fly_peng,correlation=corBM)
summary(pgls_flying)
anova(pgls_flying)
df_fly_not[df_fly_not$ability_to_fly != 'Flying',]$ability_to_fly = 'Non-flying'
spp = rownames(df_fly_not)
corBM = corBrownian(phy=no_peng_fly_tree,form=~spp)
#mutspec PGLS
df_mutspec = read.table('C:/Users/User/Desktop/mutspec12.tsv', header = TRUE, fill = TRUE)
df_ff = df_mutspec[df_mutspec$Label == 'ff',]
df_syn = df_mutspec[df_mutspec$Label == 'syn',]
df_ff = df_ff[!grepl('Node', df_ff$AltNode),]
df_ff = df_ff[,c(1,5,7)]
df_ff1 = reshape(data = df_ff, idvar = 'AltNode',
timevar = 'Mut',
direction = 'wide')
names(df_ff1) = c('species_name', 'Mutation_TG', 'Mutation_TC', 'Mutation_TA', 'Mutation_GT', 'Mutation_GC',
'Mutation_GA', 'Mutation_CT', 'Mutation_CG', 'Mutation_CA', 'Mutation_AT', 'Mutation_AG', 'Mutation_AC')
df_syn = df_syn[!grepl('Node', df_syn$AltNode),]
df_syn = df_syn[,c(1,5,7)]
df_syn1 = reshape(data = df_syn, idvar = 'AltNode',
timevar = 'Mut',
direction = 'wide')
names(df_syn1) = c('species_name', 'Mutation_TG_syn', 'Mutation_TC_syn', 'Mutation_TA_syn', 'Mutation_GT_syn', 'Mutation_GC_syn',
'Mutation_GA_syn', 'Mutation_CT_syn', 'Mutation_CG_syn', 'Mutation_CA_syn', 'Mutation_AT_syn', 'Mutation_AG_syn', 'Mutation_AC_syn')
df_fly_peng1 = merge(df_fly_peng, df_ff1)
df_fly_peng1 = merge(df_fly_peng1, df_syn1)
need_species = setdiff(df_fly_peng$species_name, df_fly_peng1$species_name)
correct_need_species = setdiff(df_fly_peng$species_name, need_species)
peng_fly_tree1<-keep.tip(peng_fly_tree,correct_need_species)
df_fly_peng1$Mutation_AG = as.numeric(df_fly_peng1$Mutation_AG)
df_fly_peng1$Mutation_AG_syn = as.numeric(df_fly_peng1$Mutation_AG_syn)
df_fly_peng1$Mutation_CT = as.numeric(df_fly_peng1$Mutation_CT)
df_fly_peng1$Mutation_CT_syn = as.numeric(df_fly_peng1$Mutation_CT_syn)
df_fly_peng1$ability_to_fly_binar = 0
df_fly_peng1[df_fly_peng1$ability_to_fly == 'Sphenisciformes',]$ability_to_fly_binar = 1
df_fly_peng1$ability_to_fly_binar_extra = 1
df_fly_peng1[df_fly_peng1$ability_to_fly == 'Sphenisciformes',]$ability_to_fly_binar_extra = 0
row.names(df_fly_peng1) = df_fly_peng1$species_name
df_fly_not1 = merge(df_fly_not, df_ff1)
df_fly_not1 = merge(df_fly_not1, df_syn1)
need_species = setdiff(df_fly_not$species_name, df_fly_not1$species_name)
correct_need_species = setdiff(df_fly_not$species_name, need_species)
not_fly_tree = read.tree('flying_and_no_peng.tre')
not_fly_tree1<-keep.tip(not_fly_tree,correct_need_species)
df_fly_not1$Mutation_AG = as.numeric(df_fly_not1$Mutation_AG)
df_fly_not1$Mutation_AG_syn = as.numeric(df_fly_not1$Mutation_AG_syn)
df_fly_not1$Mutation_CT = as.numeric(df_fly_not1$Mutation_CT)
df_fly_not1$Mutation_CT_syn = as.numeric(df_fly_not1$Mutation_CT_syn)
df_fly_not2 = df_fly_not1
df_fly_not2[df_fly_not2$ability_to_fly != 'Flying',]$ability_to_fly = 'Non-flying'
df_fly_not1$ability_to_fly_binar = 0
df_fly_not1[df_fly_not1$ability_to_fly != 'Flying',]$ability_to_fly_binar = 1
df_fly_not1$ability_to_fly_binar_extra = 1
df_fly_not1[df_fly_not1$ability_to_fly != 'Flying',]$ability_to_fly_binar_extra = 0
row.names(df_fly_not1) = df_fly_not1$species_name
spp2 = rownames(df_fly_not1)
#dive pgls
df_dive = read.csv('dive_and_gene.csv')
df_dive = df_dive[,c(2:6)]
dive_tree = read.tree('diving_birds_tree.tre')
row.names(df_dive) = df_dive$species_name
df_dive1 = merge(df_dive, df_syn1)
unique(df_dive1$ability_to_dive)
df_dive2 = df_dive1
df_dive1[df_dive1$ability_to_dive == 'Anseriformes',]$ability_to_dive = 'Diving_all_species'
df_dive1[df_dive1$ability_to_dive == "Sphenisciformes",]$ability_to_dive = 'Diving_all_species'
df_dive1[df_dive1$ability_to_dive == "Podicipediformes",]$ability_to_dive = 'Diving_all_species'
df_dive1[df_dive1$ability_to_dive == "Gaviiformes",]$ability_to_dive = 'Diving_all_species'
df_dive1[df_dive1$ability_to_dive == "Suliformes",]$ability_to_dive = 'Diving_all_species'
df_dive1[df_dive1$ability_to_dive == "Charadriiformes",]$ability_to_dive = 'Diving_some_species'
df_dive1[df_dive1$ability_to_dive == "Coraciiformes",]$ability_to_dive = 'Diving_some_species'
df_dive1[df_dive1$ability_to_dive == "Passeriformes",]$ability_to_dive = 'Diving_some_species'
df_dive1[df_dive1$ability_to_dive == "Procellariiformes",]$ability_to_dive = 'Diving_some_species'
df_dive1[df_dive1$ability_to_dive == "Gruiformes",]$ability_to_dive = 'Diving_some_species'
df_dive1$GhAhSkew = as.numeric(as.character(df_dive1$GhAhSkew))
df_dive1$Mutation_AG_syn = as.numeric(as.character(df_dive1$Mutation_AG_syn))
row.names(df_dive1) = df_dive1$species_name
need_species = setdiff(df_dive$species_name, df_dive1$species_name)
correct_need_species = setdiff(df_dive$species_name, need_species)
dive_tree1 = keep.tip(dive_tree,correct_need_species)
df_dive1$ability_to_dive_binar = 0
df_dive1[df_dive1$ability_to_dive != 'Non-diving',]$ability_to_dive_binar = 1
#TR_TS
df_tr_ts = read.csv('TR_TS_dataset.csv')
df_tr_ts = df_tr_ts[,c(2:19)]
df_tr_ts = df_tr_ts[,c(1,16:18)]
df_dive11 = df_dive1[df_dive1$ability_to_dive != 'Diving_some_species',]
row.names(df_dive11) = df_dive11$species_name
need_species = setdiff(df_dive1$species_name, df_dive11$species_name)
correct_need_species = setdiff(df_dive1$species_name, need_species)
dive_tree11 = keep.tip(dive_tree1,correct_need_species)
df_dive12 = df_dive1[df_dive1$ability_to_dive != 'Diving_all_species',]
row.names(df_dive12) = df_dive12$species_name
need_species = setdiff(df_dive1$species_name, df_dive12$species_name)
correct_need_species = setdiff(df_dive1$species_name, need_species)
dive_tree12 = keep.tip(dive_tree1,correct_need_species)
spp1 = rownames(df_fly_peng1)
corBM1 = corBrownian(phy=peng_fly_tree1,form=~spp1)
pgls_mt_peng = gls(GhAhSkew~ability_to_fly_binar_extra,
data=df_fly_peng1,correlation=corBM1)
summary(pgls_mt_peng)
df_fly_peng1_tr = merge(df_fly_peng1, df_tr_ts)
View(df_fly_peng1_tr)
spp1 = rownames(df_fly_peng1_tr)
corBM1 = corBrownian(phy=peng_fly_tree1,form=~spp1)
pgls_mt_peng = gls(TR_TS~ability_to_fly_binar,
data=df_fly_peng1_tr,correlation=corBM1)
df_fly_peng1_tr$TR_TS = as.numeric(df_fly_peng1_tr$TR_TS)
spp1 = rownames(df_fly_peng1_tr)
row.names(df_fly_peng1_tr) = df_fly_peng1_tr$species_name
spp1 = rownames(df_fly_peng1_tr)
corBM1 = corBrownian(phy=peng_fly_tree1,form=~spp1)
pgls_mt_peng = gls(TR_TS~ability_to_fly_binar,
data=df_fly_peng1_tr,correlation=corBM1)
#new PGLS for birds
rm(list = ls(all=TRUE))
