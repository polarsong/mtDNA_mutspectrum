library(ape)
library(phangorn)
library(phytools)
library(geiger)
#Chapter 1
text.string<-
"(((((Robin,Iguana),((((Cow,Whale),Pig),Bat),
(Lemur,Human))),Coelacanth),Goldfish),Shark);"
vert.tree<-read.tree(text=text.string)
plot(vert.tree,no.margin=TRUE)
#Cool visualization
par(mfrow=c(2,2),mar=c(1.1,1.1,3.1,1.1))
plot(vert.tree)
mtext("(a)",line=1,adj=0)
plot(vert.tree,type="cladogram")
mtext("(b)",line=1,adj=0)
plot(unroot(vert.tree),type="unrooted",
lab4ut="axial",x.lim=c(-2,6.5),
y.lim=c(-3,7.5))
mtext("(c)",line=1,adj=0)
#Nodes
plotTree(vert.tree,offset=1,type="cladogram")
labelnodes(1:(Ntip(vert.tree)+vert.tree$Nnode),
1:(Ntip(vert.tree)+vert.tree$Nnode),
interactive=FALSE,cex=0.8)
#reading tree files
anolis.tree<-read.tree(file="Anolis.tre.txt")
anolis.tree
plotTree(anolis.tree,ftype="i",fsize=0.4,lwd=1)
Ntip(anolis.tree)
View(anolis.tree)
write.tree(vert.tree,file="example.tre")
#
pr.species<-c("cooki","poncensis",
"gundlachi","pulchellus","stratulus",
"krugi","evermanni","occultus","cuvieri",
"cristatellus")
nodes<-sapply(pr.species,grep,x=anolis.tree$tip.label)
nodes
?sapply
plotTree(anolis.tree,type="fan",fsize=0.6,lwd=1,
ftype="i")
add.arrow(anolis.tree,tip=nodes,arrl=0.15,col="red",
offset=2)
anolis.noPR<-drop.tip(anolis.tree,pr.species)
plotTree(anolis.noPR,type="fan",fsize=0.6,lwd=1,
ftype="i")
#Extracting a clade
#MRCA - most recent common ancestor
node<-getMRCA(anolis.tree,pr.species[
-which(pr.species%in%c("cuvieri","occultus"))])
node
plot(paintSubTree(anolis.tree,node,"b","a"),
type="fan",fsize=0.6,lwd=2,
colors=setNames
(
c("gray","blue"),
c("a","b")),
ftype="i")
arc.cladelabels(anolis.tree,"clade to extract",node,
1.35,1.4,mark.node=FALSE,cex=0.6)
arc.cladelabels(anolis.tree,"clade to extract",node,
1.2,1.4,mark.node=FALSE,cex=0.6)
#Also painting tree
plot(paintSubTree(anolis.tree,node,"b","a"),
type="fan",fsize=0.6,lwd=2,
colors=setNames
(
c("gray","blue"),
c("a","b")),
ftype="i")
arc.cladelabels(anolis.tree,"clade to extract",node,
1.2,1.4,mark.node=FALSE,cex=0.6)
arc.cladelabels(anolis.tree,"clade to extract",node,
1.2,1.4,mark.node=FALSE,cex=0.1)
arc.cladelabels(anolis.tree,"clade to extract",node,
1.2,1.1,mark.node=FALSE,cex=0.6)
arc.cladelabels(anolis.tree,"clade to extract",node,
1.2,1.2,mark.node=FALSE,cex=0.6)
arc.cladelabels(anolis.tree,"clade to extract",node,
1.2,1.3,mark.node=FALSE,cex=0.6)
#Also painting tree
plot(paintSubTree(anolis.tree,node,"b","a"),
type="fan",fsize=0.6,lwd=2,
colors=setNames
(
c("gray","blue"),
c("a","b")),
ftype="i")
arc.cladelabels(anolis.tree,"clade to extract",node,
1.2,1.25,mark.node=FALSE,cex=0.6)
pr.clade<-extract.clade(anolis.tree,node)
pr.clade
pr.tree<-keep.tip(anolis.tree,pr.species)
pr.tree
par(mfrow=c(1,2))
plotTree(pr.clade,ftype="i",mar=c(1.1,1.1,3.1,1.1),
cex=1.1)
mtext("(a)",line=0,adj=0)
plotTree(pr.tree,ftype="i",mar=c(1.1,1.1,3.1,1.1),
cex=1.1)
mtext("(b)",line=0,adj=0)
#Interactive
anolis.pruned<-collapseTree(anolis.tree)
#multyphylo
anolis.trees<-c(anolis.tree,anolis.noPR,pr.clade,
pr.tree)
print(anolis.trees,details=TRUE)
#csv tree
anole.data<-read.csv(file="anole.data.csv",row.names=1,
header=TRUE)
ecomorph<-read.csv(file="ecomorph.csv",row.names=1,
header=TRUE,stringsAsFactors=TRUE)
View(anole.data)
View(ecomorph)
View(anole.data)
#comparing files
library(geiger)
name.check(anolis.tree,anole.data)
chk<-name.check(anolis.tree,ecomorph)
chk
ecomorph.tree<-drop.tip(anolis.tree,chk$tree_not_data)
ecomorph.tree
ecomorph.data<-anole.data[ecomorph.tree$tip.label,]
head(ecomorph.data)
name.check(ecomorph.tree,ecomorph.data)
View(ecomorph.data)
View(ecomorph.tree)
ecomorph.pca<-phyl.pca(ecomorph.tree,ecomorph.data)
ecomorph.pca
ecomorph.pca<-phyl.pca(ecomorph.tree,ecomorph.data)
par(mar=c(4.1,4.1,2.1,1.1),las=1) ## set margins
plot(ecomorph.pca,main="")
ecomorph.pca$Evec[,1]<--ecomorph.pca$Evec[,1]
ecomorph.pca$L[,1]<--ecomorph.pca$L[,1]
ecomorph.pca$S<-scores(ecomorph.pca,
newdata=ecomorph.data)
par(cex.axis=0.8,mar=c(5.1,5.1,1.1,1.1))
phylomorphospace(ecomorph.tree,
scores(ecomorph.pca)[,1:2],
ftype="off",node.size=c(0,1),bty="n",las=1,
xlab="PC1 (overall size)",
ylab=expression(paste("PC2 ("%up%"lamellae number, "
%down%"tail length)")))
par(cex.axis=0.8,mar=c(5.1,5.1,1.1,1.1))
phylomorphospace(ecomorph.tree,
scores(ecomorph.pca)[,1:2],
ftype="off",node.size=c(0,1),bty="n",las=1,
xlab="PC1 (overall size)",
ylab=expression(paste("PC2 ("%up%"lamellae number, "
%down%"tail length)")))
eco<-setNames(ecomorph[,1],rownames(ecomorph))
View(ecomorph)
ECO<-to.matrix(eco,levels(eco))
tiplabels(pie=ECO[ecomorph.tree$tip.label,],cex=0.5)
legend(x="bottomright",legend=levels(eco),cex=0.8,pch=21,
pt.bg=rainbow(n=length(levels(eco))),pt.cex=1.5)
rm(list = ls(all=TRUE))
## load packages
library(phytools)
## read in tree
tree<-read.tree(
text="((A,B,C,D,E,F,G,H,I,J,K,L,M),
(N,O,P,Q,R,S,T,U,V,W,X,Y,Z));")
## set branch lengths on the tree
tree<-compute.brlen(tree,power=1.8)
## simulate data, independently for x & y
x<-fastBM(tree)
y<-fastBM(tree)
## plot the results with clades A & B labeled
## split plotting area
par(mfrow=c(1,2))
## graph tree
plotTree(tree,type="cladogram",ftype="off",
mar=c(5.1,4.1,3.1,2.1),color="darkgray",
xlim=c(0,1.3),ylim=c(1,Ntip(tree)))
## add points at the tips of the tree to match those
## on our scatterplot
points(rep(1,13),1:13,pch=21,bg="lightgray",
cex=1.2)
points(rep(1,13),14:26,pch=22,bg="black",cex=1.2)
## add clade labels to the tree
cladelabels(tree,"A",node=28,offset=2)
cladelabels(tree,"B",node=29,offset=2)
mtext("(a)",line=1,adj=0,cex=1.5)
## create scatterplot of x & y
par(mar=c(5.1,4.1,3.1,2.1))
plot(x,y,bty="n",las=1)
points(x[1:13],y[1:13],pch=21,bg="lightgray",
cex=1.2)
points(x[14:26],y[14:26],pch=22,bg="black",cex=1.2)
mtext("(b)",line=1,adj=0,cex=1.5)
#PIC
mammalHR<-read.csv("mammalHR.csv",row.names=1)
View(mammalHR)
## set margins of the plot
par(mar=c(5.1,5.1,1.1,1.1))
## set margins of the plot
par(mar=c(5.1,5.1,1.1,1.1))
## create scatterplot
plot(homeRange~bodyMass,data=mammalHR,
xlab="body mass (kg)",
ylab=expression(paste("home range (km"^"2",")")),
pch=21,bg="gray",cex=1.2,log="xy",las=1,cex.axis=0.7,
cex.lab=0.9,bty="n")
#OLS
fit.ols<-lm(log(homeRange)~log(bodyMass),data=mammalHR)
fit.ols
summary(fit.ols)
## set margins and graph scatterplot
par(mar=c(5.1,5.1,1.1,1.1))
plot(homeRange~bodyMass,data=mammalHR,
xlab="body mass (kg)",
ylab=expression(paste("home range (km"^"2",")")),
pch=21,bg="gray",cex=1.2,log="xy",las=1,
cex.axis=0.7,cex.lab=0.9,bty="n")
## add the line of best fit from lm
lines(mammalHR$bodyMass,exp(predict(fit.ols)),lwd=2,
col="darkgray")
#PIC
mammal.tree<-read.tree("mammalHR.phy")
#PIC
mammal.tree<-read.tree("../../2Scripts/PCM_in_R_materials/mammalHR.phy")
#PIC
mammal.tree<-read.tree("../../2Scripts/PCM_in_R_materials/mammalHR.phy.txt")
## plot phylogeny of mammals
plotTree(mammal.tree,ftype="i",fsize=0.7,lwd=1)
## add node labels to the plotted tree
nodelabels(bg="white",cex=0.5,frame="circle")
## pull our home range and body mass as
## numeric vectors
homeRange<-setNames(mammalHR[,"homeRange"],
rownames(mammalHR))
bodyMass<-setNames(mammalHR[,"bodyMass"],
rownames(mammalHR))
## compute PICs for home range and body size
pic.homerange<-pic(log(homeRange),mammal.tree)
pic.bodymass<-pic(log(bodyMass),mammal.tree)
head(pic.homerange,n=20)
## fit linear model to PICs without intercept
fit.pic<-lm(pic.homerange~pic.bodymass+0)
fit.pic
summary(fit.pic)
## set margins
par(mar=c(5.1,5.1,1.1,1.1))
## graph scatterplot of contrasts
plot(pic.homerange~pic.bodymass,
xlab="PICs for log(body mass)",
ylab="PICs for log(range size)",
pch=21,bg="gray",cex=1.2,las=1,
cex.axis=0.7,cex.lab=0.9,bty="n")
## add gridlines to the plot
abline(h=0,lty="dotted")
abline(v=0,lty="dotted")
## reset graphing limits of the plot to the
## x/y range of our PICs
clip(min(pic.bodymass),max(pic.bodymass),
min(pic.homerange),max(pic.homerange))
## graph our fitted line
abline(fit.pic,lwd=2,col="darkgray")
rm(list = ls(all=TRUE))
## load packages
library(phytools)
## read data from file
primate.data<-read.csv("primateEyes.csv",row.names=1,
stringsAsFactors=TRUE)
## inspect data
head(primate.data,4)
View(primate.data)
## read tree from file and inspect
primate.tree<-read.tree("primateEyes.phy.txt")
print(primate.tree,printlen=2)
## extract orbit area from our data frame and add names
orbit.area<-setNames(primate.data[,"Orbit_area"],
rownames(primate.data))
## extract skull length from our data frame and add names
skull.length<-setNames(primate.data[,"Skull_length"],
rownames(primate.data))
## compute PICs on the log-transformed values of both traits
pic.orbit.area<-pic(log(orbit.area),primate.tree)
pic.skull.length<-pic(log(skull.length),
primate.tree)
## fit a linear regression to orbit area as a function of
## skull length, without an intercept term
pic.primate<-lm(pic.orbit.area~pic.skull.length+0)
summary(pic.primate)
## set plotting parameters
par(mfrow=c(1,2),
mar=c(5.1,4.6,2.1,1.1))
## plot our raw data in the original space
plot(orbit.area~skull.length,log="xy",
pch=21,bg=palette()[4],cex=1.2,
bty="n",xlab="skull length (cm)",
ylab=expression(paste("orbit area (",mm^2,")")),
cex.lab=0.8,cex.axis=0.7,las=1)
mtext("(a)",line=0,adj=0,cex=0.8)
## plot our phylogenetic contrasts
plot(pic.orbit.area~pic.skull.length,pch=21,
bg=palette()[4],cex=1.2,
bty="n",xlab="PICs for log(skull length)",
ylab="PICs for log(orbit area)",
cex.lab=0.8,cex.axis=0.7,las=1)
mtext("(b)",line=0,adj=0,cex=0.8)
## limit the plotting area to the range of our two traits
clip(min(pic.skull.length),max(pic.skull.length),
min(pic.orbit.area),max(pic.orbit.area))
## add our fitted contrasts regression line
abline(pic.primate,lwd=2)
library(nlme)
spp<-rownames(primate.data)
corBM<-corBrownian(phy=primate.tree,form=~spp)
corBM
pgls.primate<-gls(log(Orbit_area)~log(Skull_length),
data=primate.data,correlation=corBM)
summary(pgls.primate)
coef(pic.primate)
coef(pgls.primate)
abs(coef(pic.primate)[1]-coef(pgls.primate)[2])
View(pic.primate)
## set the random number generator seed
set.seed(88)
## simulate a random 5-taxon tree
tree<-pbtree(n=5,scale=10,tip.label=LETTERS[5:1])
## subdivide our plotting area into two panels
par(mfrow=c(2,1))
## plot the tree
plotTree(tree,mar=c(3.1,1.1,4.1,1.1),fsize=1.25,
ylim=c(0.5,5.4))
## add a horizontal axis
axis(1)
## add edge labels giving the branch lengths
edgelabels(round(tree$edge.length,2),pos=3,
frame="none",cex=0.9)
mtext("(a)",line=1,adj=0)
## switch to the second panel
plot.new()
## set new plot margins and plot dimensions
par(mar=c(3.1,1.1,4.1,1.1))
plot.window(xlim=c(0,6),ylim=c(0,6))
## add a grid of lines for our correlation matrix
lines(c(0,6,6,0,0),c(0,0,6,6,0))
for(i in 1:5) lines(c(i,i),c(0,6))
for(i in 1:5) lines(c(0,6),c(i,i))
## compute the assumed correlation structure
V<-cov2cor(vcv(tree)[LETTERS[1:5],LETTERS[1:5]])
## print it into the boxes of our grid
for(i in 1:5) text(i+0.5,5.5,LETTERS[i],cex=1.1)
for(i in 1:5) text(0.5,5.5-i,LETTERS[i],cex=1.1)
for(i in 1:5) for(j in 1:5) text(0.5+i,5.5-j,
round(V[i,j],2),cex=1.1)
mtext("(b)",line=1,adj=0)
corLambda<-corPagel(value=1,phy=primate.tree,form=~spp)
corLambda
pgls.Lambda<-gls(log(Orbit_area)~log(Skull_length),
data=primate.data,correlation=corLambda)
summary(pgls.Lambda)
primate.ancova<-gls(log(Orbit_area)~log(Skull_length)+
Activity_pattern,data=primate.data,
correlation=corBM)
anova(primate.ancova)
## set the margins of our plot using par
par(mar=c(5.1,5.1,2.1,2.1))
## set the point colors for the different levels
## of our factor
pt.cols<-setNames(c("#87CEEB","#FAC358","black"),
levels(primate.data$Activity_pattern))
## plot the data
plot(Orbit_area~Skull_length,data=primate.data,pch=21,
bg=pt.cols[primate.data$Activity_pattern],
log="xy",bty="n",xlab="skull length (cm)",
ylab=expression(paste("orbit area (",mm^2,")")),
cex=1.2,cex.axis=0.7,cex.lab=0.8)
## add a legend
legend("bottomright",names(pt.cols),pch=21,pt.cex=1.2,
pt.bg=pt.cols,cex=0.8)
## create a common set of x values to plot our
## different lines for each level of the factor
xx<-seq(min(primate.data$Skull_length),
max(primate.data$Skull_length),length.out=100)
## add lines for each level of the factor
lines(xx,exp(predict(primate.ancova,
newdata=data.frame(Skull_length=xx,
Activity_pattern=as.factor(rep("Cathemeral",100))))),
lwd=2,col=pt.cols["Cathemeral"])
lines(xx,exp(predict(primate.ancova,
newdata=data.frame(Skull_length=xx,
Activity_pattern=as.factor(rep("Diurnal",100))))),
lwd=2,col=pt.cols["Diurnal"])
lines(xx,exp(predict(primate.ancova,
newdata=data.frame(Skull_length=xx,
Activity_pattern=as.factor(rep("Nocturnal",100))))),
lwd=2,col=pt.cols["Nocturnal"])
rm(list = ls(all=TRUE))
## load libraries
library(phytools)
## read tree from file
eel.tree<-read.tree("elopomorph.tre")
## read tree from file
eel.tree<-read.tree("elopomorph.txt")
print(eel.tree,printlen=2)
## read data
eel.data<-read.csv("elopomorph.csv",row.names=1,
stringsAsFactors=TRUE)
head(eel.data)
## extract total body length and log-transform
lnTL<-setNames(log(eel.data$Max_TL_cm),rownames(eel.data))
head(lnTL)
## estimate ancestral states using fastAnc
fit.lnTL<-fastAnc(eel.tree,lnTL,vars=TRUE,CI=TRUE)
View(fit.lnTL)
print(fit.lnTL,printlen=10)
## plot eel phylogeny using plotTree
plotTree(eel.tree,ftype="i",fsize=0.5,lwd=1)
View(eel.tree)
## add node labels for reference
labelnodes(1:eel.tree$Nnode+Ntip(eel.tree),
1:eel.tree$Nnode+Ntip(eel.tree),
interactive=FALSE,cex=0.5)
## compute "contMap" object
eel.contMap<-contMap(eel.tree,lnTL,
plot=FALSE,lims=c(2.7,5.8))
## change the color gradient to a custom gradient
eel.contMap<-setMap(eel.contMap,
c("white","orange","black"))
## plot "contMap" object
plot(eel.contMap,sig=2,fsize=c(0.4,0.7),
lwd=c(2,3),leg.txt="log(total length cm)")
## identify the tips descended from node 102
tips<-extract.clade(eel.tree,102)$tip.label
tips
## prune "contMap" object to retain only these tips
pruned.contMap<-keep.tip.contMap(eel.contMap,tips)
## plot object
plot(pruned.contMap,xlim=c(-2,90),lwd=c(3,4),
fsize=c(0.7,0.8))
## add error bars
errorbar.contMap(pruned.contMap,lwd=8)
rm(list = ls(all=TRUE))
library(phytools)
library(nlme)
library(geiger)
library(ggtree)
peng_data_tree = read.tree('peng_and_fly_all_data.tre')
peng_data_tree = read.tree('peng_and_fly_all_data.tre')
## load the phytools package
library(phytools)
## simulate a pure-birth (Yule) tree using pbtree
tree<-pbtree(n=12,scale=100)
View(tree)
## split our plotting area in two
par(mfrow=c(2,1))
## graph our phylogeny
plotTree(tree,ftype="off",mar=c(4.1,4.1,2.1,1.1))
## compute the lineages through time using ltt
obj<-ltt(tree,plot=FALSE)
## draw vertical lines at each lineage accumulation
## event
abline(v=obj$times,lty="dotted",
col=make.transparent("blue",0.5))
## add a horizontal axis and plot label
axis(1,cex.axis=0.8)
mtext("(a)",line=1,at=-10)
## create a second plot graphing our LTT
plot(obj,mar=c(5.1,4.1,2.1,1.1),bty="n",
log.lineages=FALSE,las=1,cex.axis=0.8)
## add the same vertical lines as in panel a)
abline(v=obj$times,lty="dotted",
col=make.transparent("blue",0.5))
## label our plot
mtext("(b)",line=1,at=-10)
darter.tree<-read.tree("etheostoma_percina_chrono.txt")
## plot our tree in fan style
plotTree(darter.tree,ftype="i",
fsize=0.4,type="fan",lwd=1,part=0.88)
## plot our tree in fan style
plotTree(darter.tree,ftype="i",
fsize=0.4,type="fan",lwd=1,part=0.88)
## compute the total height of the tree
h<-max(nodeHeights(darter.tree))
## graph a temporal axis without labeling
obj<-axis(1,pos=-2,at=h-c(0,5,10,15,20),
cex.axis=0.5,labels=FALSE)
## add labels, but going backwards from the
## present day
text(obj,rep(-5,length(obj)),h-obj,
cex=0.6)
## add a text label to the axis
text(mean(obj),-8,"time (mybp)",
cex=0.8)
## compute "ltt" object
darter.ltt<-ltt(darter.tree, plot=FALSE)
## modify the figure margins
par(mar=c(5.1,4.1,2.1,2.1))
## plot "ltt" object
plot(darter.ltt,log.lineages=FALSE,log="y",
col="blue",lwd=2,bty="n",las=1,
cex.axis=0.8)
print(darter.ltt)
## resolve polytomies using multi2di
darter.tree<-multi2di(darter.tree)
## recompute "ltt" object
darter.ltt<-ltt(darter.tree,plot=FALSE)
darter.ltt
darter.mccr<-mccr(darter.ltt,rho=201/216,
nsim=500)
darter.mccr
par(mar=c(5.1,4.1,2.1,2.1))
plot(darter.mccr,main="",las=1,cex.axis=0.8)
rm(list = ls(all=TRUE))
